<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Json on Yiran's Blog</title><link>https://zdyxry.github.io/tags/Json/</link><description>Recent content in Json on Yiran's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 17 Jun 2018 21:00:49 +0000</lastBuildDate><atom:link href="https://zdyxry.github.io/tags/Json/atom.xml" rel="self" type="application/rss+xml"/><item><title>将 Json 转换为 Python Object(二)</title><link>https://zdyxry.github.io/2018/06/17/%E5%B0%86-Json-%E8%BD%AC%E6%8D%A2%E4%B8%BA-Python-Object%E4%BA%8C/</link><pubDate>Sun, 17 Jun 2018 21:00:49 +0000</pubDate><guid>https://zdyxry.github.io/2018/06/17/%E5%B0%86-Json-%E8%BD%AC%E6%8D%A2%E4%B8%BA-Python-Object%E4%BA%8C/</guid><description>最近趁着端午假期，终于把 《流畅的 Python》看完了，收获很大，书中某一章节介绍了 addict 库，可以将 Json 转换为 Python Object 。 今天看了看具体的实现方式，比 Stack Overflow 的回答完整，补发一篇博客学习下。
源码代码很少，补充一些关键变量用于了解整体实现流程。
import copy from pprint import pprint class Dict(dict): def __init__(__self, *args, **kwargs): print &amp;#39;init kwargs is &amp;#39;, kwargs object.__setattr__(__self, &amp;#39;__parent&amp;#39;, kwargs.pop(&amp;#39;__parent&amp;#39;, None)) object.__setattr__(__self, &amp;#39;__key&amp;#39;, kwargs.pop(&amp;#39;__key&amp;#39;, None)) for arg in args: if not arg: continue elif isinstance(arg, dict): for key, val in arg.items(): __self[key] = __self._hook(val) elif isinstance(arg, tuple) and (not isinstance(arg[0], tuple)): __self[arg[0]] = __self._hook(arg[1]) else: for key, val in iter(arg): __self[key] = __self.</description></item></channel></rss>