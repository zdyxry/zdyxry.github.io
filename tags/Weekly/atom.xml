<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Weekly on Yiran's Blog</title><link>https://zdyxry.github.io/tags/Weekly/</link><description>Recent content in Weekly on Yiran's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 28 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://zdyxry.github.io/tags/Weekly/atom.xml" rel="self" type="application/rss+xml"/><item><title>Weekly Issue 2024-01-28</title><link>https://zdyxry.github.io/2024/01/28/Weekly-Issue-2024-01-28/</link><pubDate>Sun, 28 Jan 2024 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2024/01/28/Weekly-Issue-2024-01-28/</guid><description>文章 链接到标题 技术 链接到标题 [ih] Dave Mills has passed away
[[NTP]] 协议作者去世了。R.I.P.
Which command did you run 1731 days ago? - by Thorsten Ball
继上一篇聊 Shell 的启动速度之后，作者继续聊 Shell 的历史记录。
使用 Ctrl-r 配合 fzf 的使用体验是绝佳的，在自己的开发机上，可以快速地找到自己所有的历史记录。有些命令是低频但是复杂的，记录到笔记上当然可行，但又好像有点没必要。最近越来越觉得保留 Shell 历史记录是一件收益非常高的事情，推荐所有人都使用 [[Atuin]] 来保存自己的历史记录，或者直接用 Git Repo 来保存也可以。
如果你遇到 [[Atuin]] 配合 [[zsh]] 无法记录 # 前缀的命令，可以参考这个 Issue 来解决：Add option to include commands that start with `#` in history · Issue #467 · atuinsh/atuin · GitHub
High-speed 10Gbps full-mesh network based on USB4 for just $47.</description></item><item><title>Weekly Issue 2024-01-21</title><link>https://zdyxry.github.io/2024/01/21/Weekly-Issue-2024-01-21/</link><pubDate>Sun, 21 Jan 2024 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2024/01/21/Weekly-Issue-2024-01-21/</guid><description>文章 链接到标题 技术 链接到标题 #!/usr/bin/env docker run · GitHub
作者利用 [[shebang]] 机制，在 Dockerfile 中直接通过 env 来查找 Docker 命令，可以达到 ./Dockerfile 直接构建并运行容器的效率。 个人觉得这是邪教。
2023 开发者生态系统现状信息图 | JetBrains: Developer Tools for Professionals and Teams
[[JavaScript]],[[python]],[[HTML]] 被使用次数最多，[[Rust]] 仍是最受欢迎的，并且有 1/6 的 Go 开发者想要采用 Rust。
性别分布中，男性 91%，女性 5%。77% 的开发者已经采用 ChatGPT，46 的开发者采用了 Github Copilot。
74% 的人经历过倦怠，针对倦怠的改善方式中：看到自己的工作成果发挥作用、涨薪、工作过程中的乐趣、来自同事的感谢，是最有效的。
每 10 位开发者中有不到 3 位 QA 的占比达到了73%。
How fast is your shell? - by Thorsten Ball - Register Spill
[[shell]] 的启动速度是非常重要的，我是一个重度的 tmux 用户，每天会打开无数次的 shell，前阵子还吐槽自己的 zsh 速度很慢，修复了一圈之后现在在 80ms 左右，可以接受的范围。</description></item><item><title>Weekly Issue 2024-01-14</title><link>https://zdyxry.github.io/2024/01/14/Weekly-Issue-2024-01-14/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2024/01/14/Weekly-Issue-2024-01-14/</guid><description>文章 链接到标题 技术 链接到标题 Keeping the lights on while leaving the cloud
But programmers are attracted to complexity like moths to a flame. The more convoluted the systems diagram, the greater the intellectual masturbation. Our commitment to resisting that is the key ingredient in this uptime success. You don’t need the cloud to get good uptimes. You need mature technologies run on redundant hardware with good backups. Same as it ever was.</description></item><item><title>Weekly Issue 2024-01-07</title><link>https://zdyxry.github.io/2024/01/07/Weekly-Issue-2024-01-07/</link><pubDate>Sun, 07 Jan 2024 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2024/01/07/Weekly-Issue-2024-01-07/</guid><description>文章 链接到标题 技术 链接到标题 为什么在容器外修改了文件后容器内的文件没有同步更新？——一次 Docker 文件挂载和 Bind mount 的探索
Bind Mount 特性：
If you are using some editor like vim, when you save the file it does not save the file directly, rather it creates a new file and copies it into place. This breaks the bind-mount, which is based on inode. Since saving the file effectively changes the inode, changes will not propagate into the container. When the container is restarted the new inode.</description></item><item><title>Weekly Issue 2023-12-31</title><link>https://zdyxry.github.io/2023/12/31/Weekly-Issue-2023-12-31/</link><pubDate>Sun, 31 Dec 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/12/31/Weekly-Issue-2023-12-31/</guid><description>文章 链接到标题 技术 链接到标题 我是如何实现快速部署的
对于部署系统来说，能够快速的本地化验证是非常关键的，无论是快速迭代，还是CICD，或者是产品层面上的架构改进。因为本地化可以让你始终明确的知道当前组件的最小依赖关系，当要引入某个中间件时，可以明确的感知到引入它带来的影响是什么。
NetKit Device - Speaker Deck
[[NetKit]] device 介绍，为了提升 Pod-Pod 之间的传输性能而引入，相较于 veth 的对称结构，NetKit 分为 Primary 和 Peer，可以通过 Primary 端将 eBPF 程序附加到 Peer 端中。
从Adobe放弃收购figma开始说说-白鸦
为什么 Adobe 要溢价收购 figma？因为 UX 市场很大，figma 定义了设计、协作流程。
为什么 UX 市场很大？因为产品在发展扩展期，需要壮大产品累加功能，需要大量的 UX 设计和实现。
为什么不愿意收购了？猜测是因为资本市场冷静，大量发展期公司选择”拉长发展扩张期“，降低风险。
ChatGPT 可能会对未来的交互产生全新的影响：“对话/命令后直接拿到结果”。
UX设计将进入一个新的时代。一个图形用户界面和对话式界面混合使用的时代，一个软界面和现实空间融合交互的时代，更细微简单但也更讲究的人机交互，将让人们获得更好的使用体验。
配合阅读：X 上的 yinggpx
设计师不讲究好看，而开始讲设计背后的理念和文化系统。那么就突破了一层。 设计师不讲究对象本身，开始讲使用她的人和环境，以及新体验和生活方式，那么又突破一层。 最终，认识到即使如此，自己也需要一个很好的团队配合，才能兑现价值，放下自我，那么才算是真正在这个世界自洽了。
#ReadInPublic | Prashant Barahi | realpacific
这个博客实现的效果是我想要的，作者把自己每天阅读的文章作为热力图更新到博客中，并自动渲染了关联图谱。很炫酷，很好。
Finished software
It solves their problem, and that’s enough.
这句话很对，能够解决部分人需求的产品，那么对这部分人来说，就是一个有价值的产品。
另一点就是，无论难易，如果做到了极致，就是成功的。</description></item><item><title>Weekly Issue 2023-12-24</title><link>https://zdyxry.github.io/2023/12/24/Weekly-Issue-2023-12-24/</link><pubDate>Sun, 24 Dec 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/12/24/Weekly-Issue-2023-12-24/</guid><description>文章 链接到标题 技术 链接到标题 Debounce and Throttle | Reorx’s Forge
Debounce: 将间隔不超过设定时间的多次连续调用变成一次。 Throttle: 确保一个函数被连续多次调用时，在设定时间内最多只实际执行一次。
相似之处：Debounce 和 Throttle 都限制了函数执行的最大频率不超过每设定时间一次 不同之处：在快速（间隔小于设定时间）连续调用时，Throttle 确保了函数会规律执行，但 Debounce 只有当连续调用放缓（间隔大于设定时间）时才会执行。
关于 k8s 的 zero downtime deployment 一些建议
滚动更新配置防止 502 的一些方式：
配置 liveness/readiness 配置 terminationGracePeriodSeconds 程序需要支持 graceful shutdown 主进程 pid 为 1，可以收到信号 通过配置 preStop 来保证 service endpoint 变更和 pod 删除的变更顺序 不过如果在滚动更新过程中遇到问题，需要终止，好像还是采用两套 deployment 在接入层切换多一些。
2024 State of Internal Developer Portals | Port
Developers spend significant time on non-core work and face prolonged software deployment timelines</description></item><item><title>Weekly Issue 2023-12-17</title><link>https://zdyxry.github.io/2023/12/17/Weekly-Issue-2023-12-17/</link><pubDate>Sun, 17 Dec 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/12/17/Weekly-Issue-2023-12-17/</guid><description>文章 链接到标题 技术 链接到标题 Open source forkers stick an OpenBao in the oven • The Register
[[hashicorp]] license 变更引发的 fork 运动还在持续，好奇这些项目的最终走向。
[[hashicorp]] 上周五股价跌了 16%，关联阅读：MSN
从滴滴的故障中我们能学到什么
[[KubeBlocks]] CEO 的文章：
控制规模，用多个小规模 K8s 集群的联邦代替一个大 K8s 避免单点，一个 K8s 集群也应该被视作一个单点 拥抱重启，把重启和迁移视作常态 数据面的可用性和控制面要解耦 “Human error” means they don’t understand how the system worked – Surfing Complexity
作者认为”人为错误“不存在，真正的原因是系统中的防御机制失效导致的系统故障。可靠的系统具有容错能力，通过演化和隐性的机制来抵御人们日常犯错的情况。当有人将故障归因于&amp;quot;人为错误&amp;quot;时，实际上是因为他们没有看到系统中的这些防御机制，也就意味着他们不了解系统是如何保持正常运行的。
但是具体应该呈现什么错误，如何解释那些错误还是分场合的。
程序的 Metrics 优化——Prometheus 文档缺失的一章 | 卡瓦邦噶！
如何“正确”的暴露 exporter metrics：
label 必须可以枚举 适当增加针对性的 metrics 可以减少查询压力 使用 recording rule 定期聚合查询，多级聚合 使用 Stream aggregation 在采集 metrics 时进行聚合，需要注意聚合函数的使用 WHAT IS 10GBIT LINE RATE?</description></item><item><title>Weekly Issue 2023-12-10</title><link>https://zdyxry.github.io/2023/12/10/Weekly-Issue-2023-12-10/</link><pubDate>Sun, 10 Dec 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/12/10/Weekly-Issue-2023-12-10/</guid><description>文章 链接到标题 技术 链接到标题 A Spooky Performance Regression in AWS EBS Volumes | DoltHub Blog
我不理解，为什么不直接运行 fio 之类的来直接验证下 EBS 的性能呢？
How to (and how not to) design REST APIs · stickfigure/blog Wiki · GitHub
关于 REST API 设计的一些想法：
使用复数名词 不要添加不必要的 path segments 不要讲数组作为 response 结构 不要反馈映射结构（dict 动态 key） 使用字符串作为标识符 给标识符增加前缀，可以快速分辨不同类型的标识符 不适用 404 来表示 not found 保持一致，各个资源/字段的命名 返回结构化错误 提供幂等机制 使用 ISO8601 代替时间戳 四层负载均衡漫谈 | 卡瓦邦噶！
[[负载均衡]] 介绍，包括四层负载均衡的要求是什么，常用技术选型和实现原理。值得多读几次。
从一个 PR 聊聊我为什么喜欢开源👋 😄 🎉 🎄 🦋</description></item><item><title>Weekly Issue 2023-12-03</title><link>https://zdyxry.github.io/2023/12/03/Weekly-Issue-2023-12-03/</link><pubDate>Sun, 03 Dec 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/12/03/Weekly-Issue-2023-12-03/</guid><description>文章 链接到标题 技术 链接到标题 S3 Express is All You Need - WarpStream
[[AWS]] [[S3 Express]] 发布，每 GB 的存储成本比 S3 标准高 8 倍。超过 512KB 的每个 API 操作（写入/读取）按 GB 收费。对于大容量场景，S3 Express 不会带来显著的成本或性能改进，但是从软件设计上，可以完全围绕对象存储来构建，比在应用程序层手动复制数据更便宜、更耐用并且更不容易出错。
[[baotiao]] 前两天发布的推特也是类似的观点：
我觉得学术界和工业界还是有点脱钩, 还在研究一些在 数据库在 modern hardware 上的优化, 我理解以后的数据库大部分应该是针对云上的硬件进行优化了, 包括 VM, essd 等等
Rust std fs 比 Python 慢！真的吗！？
从最初的用户上报，到一点点的复现问题，进行各种尝试，包括不限于：更换内存分配器、调整 mitigations、调整透明大页、调整 NUMA等等。最终确定是与 FSRM 相关。社区力量大啊。
如何发现 offset 的差异：
两个相同的系统调用不可能有不同的时间，在排除了 length 参数差异之后，找到了 -e raw=read 参数，发现了 offset 差异。
FSRM，即 Fast Short REP MOV，是英特尔最初的创新，近期也被AMD采纳，用以提升 rep movsb 和 rep movsd 的速度。它旨在提高大量内存复制的效率。声明支持它的CPU将在 glibc 中默认使用 FSRM。</description></item><item><title>Weekly Issue 2023-11-26</title><link>https://zdyxry.github.io/2023/11/26/Weekly-Issue-2023-11-26/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/11/26/Weekly-Issue-2023-11-26/</guid><description>文章 链接到标题 技术 链接到标题 X 上的 NadeshikoManju@摇曳露营 S3 2023年四月放送：“阿里的同学关注到了这条推，那我就详细聊聊我用下来的坑点把 1. 先说定位，为什么没有一个 all in one 的 aliyun cli，为什么需要用户一个产品安装一个 CLI？ 2. 然后我们来看安装，为啥不能提供包管理的安装方式，非要用户手动下载二进制。而且你们下载二进制不做 SHA 系的校验和 GPG 签名发布么？” / X
[[Manjusaka]] 提到的关于 [[Aliyun]] ossutils 体验很差的吐槽，其中很多是通用的：
为什么没有统一的命令行工具，反而需要一个产品提供一个 CLI？ 为什么不提供包管理的安装方式，只提供二进制，但是二进制不做 SHA 校验和 GPG 签名； 提供的统一配置文件，需要手动填写 endpoint,accessKeySecret, stsToken&amp;hellip;.. 为什么不提供 SSO？ 不支持单文件内的多个不同账户配置 不支持环境变量指定配置文件； CP 命令参数不清晰，&amp;ndash;acl 和 &amp;ndash;meta x-oss-object-acl 的区别？暴露了过多细节给 client； 不支持 bash_complete ； 其中 [[ayanamist]] 的总结是：都是外包做的，而且文档都很差，主要是没有办法给些文档这件事打绩效，做 DX 都是无法打绩效的，如何评判工作做的是否好呢？
Canonical Microcloud: Simple, free, on-prem Linux clustering • The Register</description></item><item><title>Weekly Issue 2023-11-19</title><link>https://zdyxry.github.io/2023/11/19/Weekly-Issue-2023-11-19/</link><pubDate>Sun, 19 Nov 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/11/19/Weekly-Issue-2023-11-19/</guid><description>文章 链接到标题 技术 链接到标题 自定义 ProxyCommand 以代理 SSH 的底层连接 - 陪她去流浪
当指定了 ProxyCommand 的时候，ssh 客户端不会再自己去尝试连接服务器，而是把待连接的服务器的地址和端口作为变量并以参数的形式传递给 ProxyCommand 指定的命令；由此命令建立与服务器的连接，并通过标准输入与标准输出（分别表示网络连接的_读_与_写_）交换数据。 两种风格的错误处理 | Frost&amp;rsquo;s Blog
两种处理方式：如果不主动处理错误，当发生错误时，是会上报异常，还是会忽略错误。以前我可能觉得 try&amp;hellip;catch&amp;hellip; 很好，但是被坑怕了之后，现在几乎所有非标准库的调用都会加 try&amp;hellip;catch.. 了，把 python 写成了 golang 的样子。
关联阅读：关于异常处理的总结和思考
curl on 100 operating systems | daniel.haxx.se
In the curl project we work relentlessly to maintain ABI and API stability and compatibility. You can upgrade your libcurl using application from the mid 2000s to the latest libcurl – without recompiling the application – and it still works the same.</description></item><item><title>Weekly Issue 2023-11-12</title><link>https://zdyxry.github.io/2023/11/12/Weekly-Issue-2023-11-12/</link><pubDate>Sun, 12 Nov 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/11/12/Weekly-Issue-2023-11-12/</guid><description>文章 链接到标题 技术 链接到标题 Linux Installation Date: How to Discover Your System&amp;rsquo;s Age
如何查看 [[Linux]] 安装时间，通过获取 / 文件系统的 Birth time 来确定：
$ stat / File: / Size: 188 Blocks: 0 IO Block: 4096 directory Device: 0,33 Inode: 256 Links: 1 Access: (0755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root) Access: 2023-03-16 13:11:52.876212014 +0800 Modify: 2023-09-25 09:15:24.162426570 +0800 Change: 2023-09-25 09:15:24.162426570 +0800 Birth: 2023-03-16 13:11:52.876212014 +0800 $ stat / | awk &amp;#39;/Birth: /{print $2 &amp;#34; &amp;#34; substr($3,1,5)}&amp;#39; 2023-03-16 13:11 Gregory Szorc&amp;rsquo;s Digital Home | My User Experience Porting Off setup.</description></item><item><title>Weekly Issue 2023-11-05</title><link>https://zdyxry.github.io/2023/11/05/Weekly-Issue-2023-11-05/</link><pubDate>Sun, 05 Nov 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/11/05/Weekly-Issue-2023-11-05/</guid><description>文章 链接到标题 技术 链接到标题 Avoid Load-bearing Shell Scripts | Ben Congdon
尽量避免使用[[Shell]] 来实现某些功能，虽然在 demo or 早起阶段，[[Shell]] 可以非常快速的实现一些功能，但是随着时间的推移，它会变得非常庞大，且无法测试，迟早需要重写它，重写的越晚，成本就越高。
拿我们内部的功能举例，我们需要进行磁盘的管理，早期的时候，因为磁盘分区比较简单，所以直接使用 shell &amp;amp; lsblk &amp;amp; parted 就可以工作，而且工作的还不错，后来慢慢的，加了更多的分区类型，shell 维护起来就非常的痛苦了，我们需要进行大量的命令行解析的工作，且要处理大量的异常场景，比如某个磁盘的某个属性的值不存在。中间配合 sed &amp;amp; awk 做了很多黑魔法，虽然它现在工作的很好，我们也围绕这个功能写了大量的端到端测试，但是我对这部分代码仍然是没有底。
crates.io Postmortem: Broken Crate Downloads | Inside Rust Blog
[[crates.io]] [[事故分析]]，一个错误的 PR 导致 13min 宕机，其中分析为什么的阶段，连续的 Why 的答案也很无奈，大家都一样（此处不能用“草台班子”）：没有单元测试、没有 reviewer、没有测试环境、全手动测试。
因为在社交媒体上使用了“草台班子”有所不妥，此处说明，我理解的草台与人无关，特指流程上的草台。此处是我的臆想，如果一个人说：我所在的公司，（部分代码）没有单元测试、没有 reviewer 直接合并代码、全手工测试，可能会被大家叫草台班子吧。
Top 10 common Dockerfile linting issues
使用 hadolint 遇到的常见 [[Dockerfile]] lint 问题，其中大部分都是包管理器的使用问题，什么时候应该使用 cache，什么时候不应该使用 cache。其中 DL3027 推荐使用 apt-get/apt-cache 替代 apt ，理由是 apt 是面向最终用户的接口，可能会发生变化，前者更稳定。</description></item><item><title>Weekly Issue 2023-10-29</title><link>https://zdyxry.github.io/2023/10/29/Weekly-Issue-2023-10-29/</link><pubDate>Sun, 29 Oct 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/10/29/Weekly-Issue-2023-10-29/</guid><description>文章 链接到标题 技术 链接到标题 2023 年秋季学期迎新会 &amp;amp; TUNA 镜像站服务架构演进
[[Tuna]] 镜像站架构演进，一直到 2018 年之前，都是不稳定的，感觉记忆出现了偏差。
Analyzing multi-gigabyte JSON files locally | thenybble.de
作者有一个较大的 json 文件，使用 jq 配合 parallel 来处理，后来选择了 Dask 来处理，处理之后可以使用 Python 来进行数据操作。也许应该考虑 [[DuckDB]] 来操作，看过的例子都是不错。
The Ruff Formatter: An extremely fast, Black-compatible Python formatter
[[Ruff]] 提供的 Formatter 的支持，99.9% 兼容 Black，但是比 Black 快30 倍以上。
What DevRel means to me - Xe Iaso
[[Xe]] 关于 [[DevRel]] 的想法，宣传公司的产品和技术，围绕该产品或技术建立和培育社区。DevRel 与开发者沟通首先需要真诚，建立社区和信任需要时间，但当积累到一定程度会产生爆发式增长，很难量化。
You Can&amp;rsquo;t Control Your Data in the Cloud</description></item><item><title>Weekly Issue 2023-10-22</title><link>https://zdyxry.github.io/2023/10/22/Weekly-Issue-2023-10-22/</link><pubDate>Sun, 22 Oct 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/10/22/Weekly-Issue-2023-10-22/</guid><description>文章 链接到标题 技术 链接到标题 HTTP/2 Rapid Reset：解构这场破纪录的攻击
[[CloudFlare]] 关于 [[HTTP-2]] 快速重置攻击 DDOS 分析。写的比 [[Google]] 这篇要好： How it works: The novel HTTP/2 ‘Rapid Reset’ DDoS attack | Google Cloud Blog 。
被取消的请求流会快速过渡整个流生命周期。 END_STREAM 标志设置为 1 的客户端 HEADERS 状态从空闲状态转换为打开状态再到半关闭状态，然后 RST_STREAM 立即导致从半关闭状态转换为关闭状态。
回想一下，只有处于打开或半关闭状态的流才会影响流并发限制。当客户端取消流时，它立即能够在其位置打开另一个流，并可以立即发送另一个请求。这就是 CVE-2023-44487 能够发挥作用的关键所在。
Better HTTP server routing in Go 1.22 - Eli Bendersky&amp;rsquo;s website](https://eli.thegreenplace.net/2023/better-http-server-routing-in-go-122/)
[[Golang]] 1.22 中会引入一个增强了模式匹配能力的默认HTTP服务器多路复用器(http.ServeMux)。新的multiplexer 支持指定HTTP方法的匹配、路径通配符匹配、路径结束符匹配等，避免了路由冲突。
The price of managed cloud services
[[37Signals]] 每个月要在搜索功能上花费 43333$ ，而切换到自建机房之后，只需要3个月就可以收回成本。并且切换回自建机房后，并没有扩大团队规模来支撑新的服务。
The team it takes to run our scale of operations in the cloud wasn&amp;rsquo;t any less than what it takes to run that same scale on our own hardware.</description></item><item><title>Weekly Issue 2023-10-15</title><link>https://zdyxry.github.io/2023/10/15/Weekly-Issue-2023-10-15/</link><pubDate>Sun, 15 Oct 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/10/15/Weekly-Issue-2023-10-15/</guid><description>文章 链接到标题 技术 链接到标题 Bootstrap an Air Gapped Cluster With Kubeadm | Kubernetes
官方下场，手把手教你如何部署一个离线[[kubernetes]] 集群。
2023 年 10 月 4 日 1.1.1.1 查询失败
[[CloudFlare]] 1.1.1.1 因为新的资源记录类型 ZONEMD 无法解析，导致使用旧版本的记录，最后由于 [[DNSSEC]] 签名过期导致故障。 这里在设计时没有考虑增加对应的报警项，导致这个场景出现的时候完全静默。。
mmproxy - Creative Linux routing to preserve client IP addresses in L7 proxies
解决经过代理之后客户端源 IP 丢失的问题。使用了 Linux 的 IP_TRANSPARENT 套接字选项来执行源 IP 欺骗，自定义路由表来强制返回流量路由到回环接口。
Deconstructing Type Parameters - The Go Programming Language
[[Golang]] 使用泛型实现 Slice 的 Clone 方法的介绍。（但是现在还没有真正使用过泛型。
func Clone[S ~[]E, E any](s S) S { return append(s[:0:0], s.</description></item><item><title>Weekly Issue 2023-10-08</title><link>https://zdyxry.github.io/2023/10/08/Weekly-Issue-2023-10-08/</link><pubDate>Sun, 08 Oct 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/10/08/Weekly-Issue-2023-10-08/</guid><description>文章 链接到标题 技术 链接到标题 註冊郵箱攻擊 - Just lepture
域名的口碑(domain reputation)导致邮件被分类到垃圾邮件中。
因為註冊的時候，系統會發送激活郵件給用戶。如果你並沒有註冊某個服務，但是你收到了註冊郵件，你有可能會將這封郵件標記為垃圾郵件。當標記的人多了，郵件商便會認為這個域名是個發垃圾郵件的域名。即使沒有人標記垃圾郵件，但是你的郵箱經常發送郵件到不存在的郵箱地址，郵件商也會認為這個域名是個發垃圾郵件的域名。而且還有找回密碼這個接口，也是會發送郵件的。這樣就導致你發送的郵件數量更多了。更有甚者，有的機器人還會點擊激活鏈接。也許這個機器人還順便舉報了一下垃圾郵件呢。
Where does my computer get the time from? – Tony Finch
电脑上的事件是从哪里获取的，我只知道 compute -&amp;gt; [[NTP]] -&amp;gt; GPS。更后面就不知道了。
Compute -&amp;gt; NTP -&amp;gt; GPS -&amp;gt; Space Force Base -&amp;gt; US Naval Observatory Alternate Master Clock -&amp;gt; Atomic clock -&amp;gt; quantum/atom movement .
把Serverless TG机器人架构模块化。 - Xiaowen.Z Deployed
通过 [[CloudFlare]] [[Worker]] Gateway 来便于功能扩展。应该跟上时代，找个需求用一下 Serverless 产品。
https://discuss.linuxcontainers.org/t/incus-0-1-has-been-released/18036
[[LXD]] 转移到 [[Canonical]] 后，社区 fork 除了 [[incus]] 来继续相关项目的开发，删除了大部分的历史包袱。看上去个人单机使用的话也挺好用的，包含了容器和虚拟机的管理，貌似也有集群模式。</description></item><item><title>Weekly Issue 2023-10-01</title><link>https://zdyxry.github.io/2023/10/01/Weekly-Issue-2023-10-01/</link><pubDate>Sun, 01 Oct 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/10/01/Weekly-Issue-2023-10-01/</guid><description>文章 链接到标题 技术 链接到标题 Fixing For Loops in Go 1.22 - The Go Programming Language
终于不用再 [[Golang]] for loop 中重新声明变量了。
μMon: Stupid simple monitoring
作者逆潮流的选择了 [[RRDtool]] 来实现自己的监控系统。
吐槽 [[prometheus]] &amp;amp; [[Grafana]]：占据不少磁盘空间的 [[TSDB]]、内存资源消耗、配置复杂、网络通信（闲置系统中的噪音）、复杂的前端页面、DSL。
Don&amp;rsquo;t trust default timeouts | Roberto Vitillo&amp;rsquo;s Blog
大部分 client 都没有设置 timeout，尽量显式的设置 timeout 来让程序符合预期。
https://morven.life/posts/git-like-os-fs/
关于 [[ostree]] 的背景介绍，使用 chroot 来隔离不同的操作系统根文件系统，使用硬链接来避免不同操作系统根文件系统之间的文件重复（通过链接到只读文件系统来限制跨更改的影响）。
[[ostree]] 已经发展这么久了，好像还没有看到大规模的应用或流行的迹象。作为开发使用的操作系统不会选用这个，因为限制太多了，作为生产上，需要确保所有的应用全部容器化，实际运维管理起来也没有那么美好，毕竟除了 rootfs 的变更，系统配置也是需要配合变更的。
Typo traps: analyzing traffic to exmaple.com (or is it example.com?)
关于 example.com 和 exmaple.</description></item><item><title>Weekly Issue 2023-09-24</title><link>https://zdyxry.github.io/2023/09/24/Weekly-Issue-2023-09-24/</link><pubDate>Sun, 24 Sep 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/09/24/Weekly-Issue-2023-09-24/</guid><description>文章 链接到标题 技术 链接到标题 相关技术 - NebulaGraph Database 手册
[[GraphDatabase]] 的简单介绍，其中提到了一些开源的 [[Graph]] 分析工具：NetworkX, Cytoscape, Gephi等。
简单聊一下开源 - (ゝω·)~ kira
这篇文章记录了作者参与 [[Bun]] 的一些感受，背后是有一个公司去运营的，在 Issue 和 PR的管理上都是混乱的。
Windows Subsystem for Linux September 2023 update - Windows Command Line
[[WSL]] 终于可以回收内存了。当设置 AutoMemoryReclaim 为 gradual 时，当 WSL 闲置 5min 后，自动释放内存。通过设置 cgroup.memory.reclaim 来实现，需要禁用 [[cgroup/v1]] ，当前会导致 [[Docker/Desktop]] 无法工作。
Github commit 签名+合并 Commit | crossoverJie&amp;rsquo;s Blog
对 git commit 进行签名。
Zig Makes Go Cross Compilation Just Work - DEV Community</description></item><item><title>Weekly Issue 2023-09-10</title><link>https://zdyxry.github.io/2023/09/10/Weekly-Issue-2023-09-10/</link><pubDate>Sun, 10 Sep 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/09/10/Weekly-Issue-2023-09-10/</guid><description>文章 链接到标题 技术 链接到标题 KubeVirt 探秘：一些核心问题解答 | MoeLove
[[KubeVirt]] 优势：声明式配置；资源请求和限制；复用 Kubernetes：调度能力、网络、存储、可观测。
VM&amp;rsquo;s and Containers I am Running - 2023
[[self-hosted]]，作者自托管了很多机器和应用，大部分采用 VM + [[Container]] 的形式，没有引入 [[kubernetes]]，比较好奇他如何管理这些机器和设备。
有关 TLS/SSL 证书的一切 | 卡瓦邦噶！
关于 [[TLS/SSL]] 的背景、实现说明，有一种读了一遍迷你版的《图解密码技术》 的感觉，写的太好了。
CA 只是拿自己的 private key 给原证书 append 了一个加密的 hash 值而已
If P99 Latency Is BS, What&amp;rsquo;s the Alternative? - The New Stack
P99延迟指标只关注延迟分布的99百分位点,而忽略了剩余1%的情况。作者提出,P99延迟指标容易遮蔽系统中的问题,不应过分依赖。建议可以使用&amp;quot;痛苦指标&amp;quot;(misery metrics)来补充P99。监控系统中的失败情况,如超时、重试、失败查询等,可以更直观地反映用户体验。当这些指标恶化时,就表明存在问题需要排查,不用等待P99恶化。
生活 链接到标题 核电废水排放 // Shell&amp;rsquo;s Home
日本负责处理污水的机构是东电，而东电的记录不怎么良好。2011年震灾的时候连续出包，硬生生把问题搞大。2013年承认放射性地下水泄漏到了太平洋里。（参考引用[7]）这里漏的可不是只含有氚的废水，而是真正的核污水。
真正最大的问题尚不是处理过之后的污水排放，而是关东震灾再来一次怎么办？ 电动车横向对比
对比了外观、内饰、空间、静音、自动驾驶、舒适度、语音助手、屏幕操作、产品细节。结论是不差钱上[[蔚来]] ES8。
现在房价进行到哪一步了？</description></item><item><title>Weekly Issue 2023-09-03</title><link>https://zdyxry.github.io/2023/09/03/Weekly-Issue-2023-09-03/</link><pubDate>Sun, 03 Sep 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/09/03/Weekly-Issue-2023-09-03/</guid><description>文章 链接到标题 技术 链接到标题 Accessing host system systemd from container’s systemctl | by George Shuklin | OpsOps | Medium
在 [[Container]] 内部操作宿主机的 [[systemd]]，除了配置 privileged 之外，还需要设置 SYSTEMCTL_FORCE_BUS
SYSTEMCTL_FORCE_BUS=1 systemctl stop atop.service
Introducing vSAN Max | VMware
[[vmware]] 推出了基于 [[vsan]] 的独立存储产品。vSAN Max每台主机200TB起步，每个集群至少有6台主机。这意味着 vSAN Max 集群的起始容量为 1.2 PB。在撰写本文时，集群内的最大主机数量为 32 台（但建议的最大数量为 24 台主机），它将支持高达 8.6 PB 和约 340 万 IOPS。
[[HCI]] 解决了专有硬件、扩容不易、管理不便等问题，将计算和存储资源整合在一起，但是也面临一些新的问题：计算资源与存储资源无法独立扩容、一个集群资源提供给其他集群受到限制。许多客户都希望能够享受 HCI 的简化管理、增量可扩展性和使用商用硬件的优势，他们还希望在独立扩展存储和计算资源方面具有更高的敏捷性。存储资源从计算资源中分离出来，但实现方式是保持 HCI 的功能和优势，同时提供集中式共享存储所需的灵活性。
OpenTF vs Terraform
关于 [[terraform]] 的开源版本 [[OpenTF]] 的想法，其中提到了 [[hashicorp]] 在针对 [[terraform]] 的功能变更是非常克制的，且做了很多的背后的努力，而 [[OpenTF]] 的支持者对这个“社区”不了解，觉得忽略了 [[hashicorp]] 的努力，但是具体做了什么努力，什么工作因为一些原因无法公开。</description></item><item><title>Weekly Issue 2023-08-27</title><link>https://zdyxry.github.io/2023/08/27/Weekly-Issue-2023-08-27/</link><pubDate>Sun, 27 Aug 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/08/27/Weekly-Issue-2023-08-27/</guid><description>文章 链接到标题 技术 链接到标题 Code-first vs. Product-first
If the product doesn’t work well, the code is not good.
Scripting with Go — Bitfield Consulting
用 [[Unix]] 命令风格来写 [[Golang]]，比如 script.Args().Concat().Match(&amp;quot;Error&amp;quot;).First(10).Stdout()
甚至内置了 jq : data, err := script.Do(req).JQ(&amp;quot;.[0] | {message: .commit.message, name: .commit.committer.name}&amp;quot;).String()
OpenTF Foundation
[[OpenTF]] 已经确认，即将 fork [[terraform]] 来保证开源协议的可用性。期待故事后续的发展。有没有可能像 [[RHEL]] 和 [[centos]] 一样，因为开源版本，社区更加繁荣？
重定向xboxlive系列CDN到国内节点以加速下载 - TERRYCHAN.ME
劫持 DNS 配合 HTTP 重定向，来加速下载。
由 HTTP Header 引起的请求超时问题排查
HTTP Expect: 100-continue 导致的请求超时问题，很多服务没有很好的支持这个 header，慎重使用，但是对于 libcurl 自动添加的这种，除了踩坑知道也没什么好的办法。</description></item><item><title>Weekly Issue 2023-08-20</title><link>https://zdyxry.github.io/2023/08/20/Weekly-Issue-2023-08-20/</link><pubDate>Sun, 20 Aug 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/08/20/Weekly-Issue-2023-08-20/</guid><description>文章 链接到标题 技术 链接到标题 Hunting for Nginx Alias Traversals in the wild
[[Nginx]] 配置 location 和 alias 配合可能存在安全隐患，需要保证在 localtion 和 alias 中都以 / 结尾。
OpenTF Foundation
[[hashicorp]] 改变了 [[License]] 之后，社区对于 [[terraform]] 的未来感到担忧，发起了宣言，期望 [[hashicorp]]可以将 [[License]]改回 [[MPL]]，最坏的打算是后续进行 fork 维护。
同步近期 containerd 的高频问题 | fuweid
Init-container rootfs 大部分都是可写模式的 overlayfs，如果 Init-container 是做数据预下载的话，那么 containerd 在删除 Init-container 时，内核一定会刷盘。在大部分场景下，同一个节点上的 Pod 共享同一块数据盘，这种不预期的刷盘很容易把系统打崩。
https://pauley.me/post/2023/spot-price-trends/
[[AWS]] 的 [[Spot]] 实例价格上涨， [[Spot]] 的低价，是由那些租用了标准实例但是没有100% 使用的人支付的。
生活 链接到标题 漫言文案排版规范 – 漫言 MangaTalk
文案排版规范，日常聊天倒是不注意这些，但是写文档的时候还是需要尽量保证规范。</description></item><item><title>Weekly Issue 2023-08-13</title><link>https://zdyxry.github.io/2023/08/13/Weekly-Issue-2023-08-13/</link><pubDate>Sun, 13 Aug 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/08/13/Weekly-Issue-2023-08-13/</guid><description>文章 链接到标题 技术 链接到标题 不秃也变强：让 AI 当大师傅，编程和写作效率提升两三倍 | 歌词经理
每当觉得 [[copilot]] 不行的时候，就去写一写单元测试，会感激他的。
最近非常喜欢用 [[ChatGPT]] 问一些 vs 问题，这个是在使用 [[Google]] 搜索时，一直使用的，当要了解一个东西 A 时，我通常看完这个东西自身的基本信息和文档之后，就去搜索 A vs，会看到很多同类的产品和对比，然后一篇一篇的看。现在有了 [[ChatGPT]] 之后，都是直接问：A 和 B 相比，有什么差别，各自有什么优缺点，在什么场景下推荐使用 A？，方便了许多。
HashiCorp adopts Business Source License
[[hashicorp]] 决定将[[开源]] [[License]] 从Mozilla Public License v2.0 (MPL 2.0)切换到Business Source License (BSL) v1.1。 [[Pulumi]] 是可以直接使用 [[terraform]] provider 的，这些会收到影响么？
[[Pulumi]] CEO 说他们尝试贡献给[[terraform]] ，但是 [[hashicorp]] 不接受这些提交，只能 fork 单独维护。同时 [[Spacelift]] 联合创始人保证用户可以继续使用 [[Spacelift]]。
Getting Friendly With CPU Caches
通过使用 slice 替代 array 来减少 CPU cache miss 的分析。</description></item><item><title>Weekly Issue 2023-08-06</title><link>https://zdyxry.github.io/2023/08/06/Weekly-Issue-2023-08-06/</link><pubDate>Sun, 06 Aug 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/08/06/Weekly-Issue-2023-08-06/</guid><description>文章 链接到标题 技术 链接到标题 不需要封装的 Overlay 容器网络 | Oilbeater 的自习室
外层的 IP 和 Mac 作为真实通信的标识是不可能省略的，但是 IP 的 Header 中有一部分字段比如 DSCP 和 ID 是很少被使用的。如果能将这两个字段利用起来，编码内层的信息，那么我们就可以不用内层的容器 IP 和 Mac 这一层了。这里可以想象一下用 iptables 来做 nat 其实是将源 IP 和端口映射成目标 IP 和端口，也可以理解为一种编码的映射关系。
作者在内核中通过 eBPF 的 Map 缓存了容器网络的 Mac 和 IP 信息，并生成了一个 key 来对应每一组 IP 和 Mac。这样，当容器再进行跨主机网络通信时，可以直接将目标地址修改为对应宿主机的地址，同时将这个 key 写入 IP 中的指定的保留字段。等数据包到达对端后，对端就可以通过这个 key 查询本地的缓存将数据包的地址再还原为容器的地址。这样并不需要额外的封装，通过 IP 和 Mac 头的直接替换，就完成了跨主机的 Overlay 网络。
生活 链接到标题 湾区与独立开发 - laike9m&amp;rsquo;s blog
“半躺半卷”、“卷”和“躺”是截然不同的生活方式，没有高下之分。但如果我们继续挖掘，会发现核心矛盾还是那两个字：独立。
北京7.30暴雨 K1178被困72小时亲历记录 - 知乎</description></item><item><title>Weekly Issue 2023-07-30</title><link>https://zdyxry.github.io/2023/07/30/Weekly-Issue-2023-07-30/</link><pubDate>Sun, 30 Jul 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/07/30/Weekly-Issue-2023-07-30/</guid><description>文章 链接到标题 技术 链接到标题 新的网络性能优化技术 —— BIG TCP | Oilbeater 的自习室
现有的 GRO 和 TSO 可以将数据包拆分和组装的工作交给网卡来做，内核按照64k 处理数据包，可以带来 10倍的性能提升。主流网卡驱动只支持 TCP 的 Offload。[[BIG TCP]] 要做的事情就是让内核里处理的这个数据包变的更大，之前内核处理的数据包大小为 64K 的主要限制在于 IP 包的头部有个长度字段，这个字段长度为 16bit，因此理论上一个 IP 包最大长度就是 64K。在 IPv6 通过 hop-by-hop 来获取数据包长度，在 IPv4 通过直接从内核的 skb-&amp;gt;len 计算真实的数据包长度。
Why is DNS still hard to learn?
为什么 [[DNS]] 很难学习，日常工作中遇到 DNS 问题都很头痛，加上国内特色网络，更麻烦。
Breaking: AWS Begins Charging For Public IPv4 Addresses - Last Week in AWS Blog
[[Azure]]和[[GCP]] 之后，[[AWS]] 开始对 [[IPv4]] 地址收费。前段时间我的 [[bandwagonhost ]] VPS 续费了，续费的理由是，我已经在市面上找不到比它更便宜的 [[IPv4]] 地址了。</description></item><item><title>Weekly Issue 2023-07-23</title><link>https://zdyxry.github.io/2023/07/23/Weekly-Issue-2023-07-23/</link><pubDate>Sun, 23 Jul 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/07/23/Weekly-Issue-2023-07-23/</guid><description>文章 链接到标题 技术 链接到标题 Incident Review for Site-wide Outage for GitLab.com - Stale Terraform Pipeline #15997 (#15999) · Issues · GitLab.com / GitLab Infrastructure Team / production · GitLab
[[Gitlab]] 对[[Terraform]] 使用不当导致故障的[[事故分析]]。在变更请求过程中,触发了一个过期的Terraform流水线。这导致一个过时的Terraform计划被应用到生产环境。同样的操作之前多次执行都没有问题。导致这次故障的原因是应用变更到生产环境有较长延迟(约3周)。用于资源重建的已知良好的流水线变得过时,并且由于最近的更改而导致配置漂移。
[[Atlantis]] 的存在是有道理的，它在前面拦一道，可以有效避免一些平时不容易注意到，但是一但发生会造成 S0 级别事故的 TF 灾难。 对抗人的不精确性的简单办法其实就是增加流程的安全性。 from: @kivinsae
额外的故事： [[Gitlab]] 因为自身故障，导致团队协作无法使用 [[Gitlab]]，只能去使用 Google Doc。
A Failed SaaS Postmortem · Matt Layman
作者在尝试做一个项目时，使用了自己不那么熟悉的技术栈，并且在软件依赖的更新上花费了大量的时间，又忽略了最终用户的感受，导致结果是不好的。在 MVP 阶段，应该保持技术栈简单，使用自己最熟悉的技术，来达到用户的期望。
https://www.redpoint.com/infrared/100/
[[Redpoint]] 选出的100 家做基础设施的[[公司]]。按类别划分：安全、数据 &amp;amp; AI、DevOps。
Golang 中预分配 slice 内存对性能的影响| Oilbeater 的自习室</description></item><item><title>Weekly Issue 2023-07-16</title><link>https://zdyxry.github.io/2023/07/16/Weekly-Issue-2023-07-16/</link><pubDate>Sun, 16 Jul 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/07/16/Weekly-Issue-2023-07-16/</guid><description>文章 链接到标题 技术 链接到标题 Towards Technical CEOs
[[Shopify]] CEO 给 llama.cpp 项目提了一个 PR，技术型老板可以让他们看到更多信息，技术敏感很重要，可以快速了解当前的趋势。有一个技术型老板应该很开心吧。
https://ricardoanderegg.com/posts/makefile-python-project-tricks/
[[Python]] 项目中使用 [[Makefile]] 的一些技巧，如 venv 设置，help message 输出，PYTHONPATH 设置等。
答案在代码中：“实现需求”的双重含义 | Piglei
是否能通过读代码来轻松还原需求 的能力很重要，有时候写一些隐式的条件判断，很容易在后续修改的时候就产生 regression 。
Building a tiny 6-drive M.2 NAS with the Rock 5 model B | Jeff Geerling
使用 Rock5 配合 6个 M.2 的磁盘组成的小型 NAS。（我一直觉得没有那么多数据要存储
RSS Vs Atom Feeds In 2023: Unveiling The Ultimate Winner
作为用户其实我不是很关心 rss /atom 具体差异，Atom 中提供了哪些新的属性对我来说改善真的不大，毕竟现在各个阅读器的阅读体验永远也比不了源站点，只要能稳定长久的提供就可以了，很多资源都没办法做到稳定长久的提供订阅地址，没有资格谈论 rss vs atom 这个话题。</description></item><item><title>Weekly Issue 2023-07-09</title><link>https://zdyxry.github.io/2023/07/09/Weekly-Issue-2023-07-09/</link><pubDate>Sun, 09 Jul 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/07/09/Weekly-Issue-2023-07-09/</guid><description>文章 链接到标题 技术 链接到标题 Google Search&amp;rsquo;s Death by a Thousand Cuts
上周在搜索的时候收到了 [[Reddit]] 事件的影响，互联网越来越封闭，如何有效的获取信息已经是一个有门槛的事情了。
https://blog.webp.se/golang-libvips-cgo-zh/
[[Golang]] 跨平台编译的问题以及解决方式。如果一定要用 CGO，还是提供 container 方式吧。
https://xeiaso.net/blog/nosleep
避免在[[单元测试]]中引入 sleep ，如果需要需要通知机制，可以使用其他方式，比如 channel。
MPTCP: 一个在 Go 1.21中的被忽略的新特性
[[Golang]] 1.21 增加 [[MPTCP]] 支持。
它允许一个连接同时使用多个网络接口。
如果连接绑定到链路速度，则使用多个链接可能会增加连接的吞吐量。请注意，如果连接绑定到 CPU，则使用多个链路会导致连接性能下降。
它提高对链接故障的恢复能力。
TCP 拥塞控制对数据延迟的影响 | 卡瓦邦噶！
通过实际问题了解[[TCP]] [[拥塞控制]]。 通过人为使用 ip route 设置 initcwnd 调整。
开源不等于免费：Red Hat 调整 CentOS 项目带来的思考
继续 [[RedHat]] 事件，这篇文章写的很好，把 [[centos]] 背景，不同的产品带来的优势、对 RedHat 的影响都交代的很清楚。如果没有 [[centos]]， [[RHEL]]也不会有今天这样的影响力。
Cloud Dependencies Need to Stop F-ing Us When They Go Down - The New Stack</description></item><item><title>Weekly Issue 2023-07-02</title><link>https://zdyxry.github.io/2023/07/02/Weekly-Issue-2023-07-02/</link><pubDate>Sun, 02 Jul 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/07/02/Weekly-Issue-2023-07-02/</guid><description>文章 链接到标题 技术 链接到标题 How to use GitHub Copilot: Prompts, tips, and use cases | The GitHub Blog
[[copilot]] 的一些技巧，总结下来就是假象在结对编程，尽可能的细粒度告诉对方当下的想法。
Monitoring is a Pain
关于 [[monitor]] 的一些思考，包含 Logs，Metrics，Traces 。
日志级别和格式混乱,没有共识。日志被用于各种用途,从调试到业务分析,使其变得极为关键，存储成本高昂,大多数日志从未被使用。
Metrics 很好，但是当前 [[prometheus]] 生态在后续的扩展上没有那么容易。
Backup and Restore Containers With Kubernetes Checkpointing API | by Martin Heinz | Better Programming
[[kubernetes]] [[Pod]] checkpoint 方式，后续应该可以作为 Pod Live Migration 的前置动作。
I&amp;rsquo;m done with Red Hat (Enterprise Linux) | Jeff Geerling
[[RedHat]] 事情继续发酵，目前官方态度很明确，不会进行改动。这篇文章有些后有趣的描述。比如：</description></item><item><title>Weekly Issue 2023-06-25</title><link>https://zdyxry.github.io/2023/06/25/Weekly-Issue-2023-06-25/</link><pubDate>Sun, 25 Jun 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/06/25/Weekly-Issue-2023-06-25/</guid><description>文章 链接到标题 技术 链接到标题 MTU 和 UDP (以及基于 UDP 的协议) | 卡瓦邦噶！
如果你要基于 UDP 实现一个协议，就要自己处理超过 [[MTU]] 的问题。
最后是 QUIC，这个最具有代表性。它的处理方法是：
QUIC 的实现应该（RFC 用的是 SHOULD）使用 PMTUD，并且应该记录每一个 source ip + dest ip 的 MTU
但是如果没有 PMTUD 的话，也可以认为 MTU=1280，协议设置 max_udp_payload_size = 1200 bytes，如此，按照上面的算法的话，IPv4 的 header 最多可以有 52 bytes，IPv6 的 header 可以有 32 bytes，正常情况下也够用
如果链路上连 1280 的 PDU 都支持不了，QUIC 就会这个 UDP 无法使用（和端口连不上等同），然后会 fallback 到 TCP
The case of the supersized shebang [LWN.net]
shebang 截断方式的改动导致NixOS 无法正常工作。 [[Perl]] 解释器会重新读取 shebang 。</description></item><item><title>Weekly Issue 2023-06-18</title><link>https://zdyxry.github.io/2023/06/18/Weekly-Issue-2023-06-18/</link><pubDate>Sun, 18 Jun 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/06/18/Weekly-Issue-2023-06-18/</guid><description>文章 链接到标题 技术 链接到标题 我的 ETH 被盗了 - forecho&amp;rsquo;s Blog
私钥直接提交到了 [[github]]，导致 [[ETH]] 被盗。在开发过程中尽量使用环境变量来获取一些敏感信息，有时候写 demo 代码的时候可能图方便就直接 hardcode 了，但可能带来的影响是很容易忽略的。
也有人推荐使用 [[git-secrets]] 在提交代码之前检查是否存在敏感信息。
云SLA是不是安慰剂？
然而，SLA 被有意地与服务的真实可靠性相混淆：用户不应该将 SLA 视作来服务可用性的可靠预测指标 —— 甚至是过去可用性水平的真实记录。对于厂家来说，****SLA 并不是真正的可靠性承诺或历史战绩，而是一种营销工具****，旨在让买家相信云厂商可以托管关键业务应用。
所以，SLA 对用户来说不是兜底损失的保险单。在最坏的情况下，它是吃不了兜着走的哑巴亏。在最好的情况下，它才是提供情绪价值的安慰剂。
文章中提到的是单个云服务商的 [[SLA]]，现在很多应用都同时在使用很多的 [[PaaS]] 提供的服务，这个时候很难计算自己应用的[[SLA]] 是多少。
How the data center site selection process works at Dropbox - Dropbox
[[Dropbox]] 如何选择 [[IDC]]。
确认需求：
电源、机柜空间、可上线时间。根据需求联系市场上活跃的供应商。 了解供应商能力：
基础设施设计规范，包含电源、冷却、容错能力。 承重能力，需要考虑各个机柜的重量。 网络设计，流量出入，有哪些可选运营商。 挖掘细节：
UPS 能力。 是否可以按照预期施工。 监控报警是否完备。 实际走访
根据线下参观，确认实际细节是否匹配。 为一些关键能力打分：机柜空间、电力、冷却、网络、安全、地域灾害（是否处于洪水和地震区域）、运维支持、后勤。 谈判租约
租金：电力成本、空间成本、优惠减免。 I booted Linux 292,612 times | Richard WM Jones</description></item><item><title>Weekly Issue 2023-06-11</title><link>https://zdyxry.github.io/2023/06/11/Weekly-Issue-2023-06-11/</link><pubDate>Sun, 11 Jun 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/06/11/Weekly-Issue-2023-06-11/</guid><description>文章 链接到标题 技术 链接到标题 OAuth Authentication with Flask in 2023 - miguelgrinberg.com
[[Flask]] 实现[[OAuth]] 示例，介绍了如何配置 Provider，如何设置 callback url ，如何使用 authorization code 获取 access token 流程。代码很清理，不到 200行，很适合了解 [[OAuth]] 。
代码地址： GitHub - miguelgrinberg/flask-oauth-example: Example code from my &amp;ldquo;OAuth Authentication with Flask&amp;rdquo; article.
Trailing Dots in Domain Names
关于域名中最后的 . 介绍和说明：如果是 www.example.com. ，那么就是绝对域名；如果是 www.example.com 那么就是相对域名，在应用了每个DNS搜索列表中总是隐含的&amp;quot;. &amp;ldquo;后，变成了www.example.com. ；如果输入 www 并且 DNS 搜索域中包含 example.com ，那么会得到 www.example.com.
DNS Lookups in Kubernetes
[[kubernetes]] 中 [[DNS]] 解析的优先级，可以直接硬编码 FQDN 来减少无效解析。</description></item><item><title>Weekly Issue 2023-06-04</title><link>https://zdyxry.github.io/2023/06/04/Weekly-Issue-2023-06-04/</link><pubDate>Sun, 04 Jun 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/06/04/Weekly-Issue-2023-06-04/</guid><description>文章 链接到标题 技术 链接到标题 Prometheus 的 Summary 和 Histogram
[[prometheus]] 的 Summary 类型和 Histogram 类型。之前内部实现网络监控功能的时候，使用了 Histogram ，Bucket 的划分粒度比较重要，如果划分的不好那么结果的偏差可能会比较大。
记一次 BUG 定位：时钟偏移引起 K8S 鉴权失败 | 三点水
[[kubernetes]] 节点时钟不一致导致的[[JWT]] 校验不通过问题。
B 节点的时间比 A 节点快 1min30s;
任务被调度到 B 节点，B 节点的 kubelet 为 Pod 生成 SA token，token 的 nbf 时间为 B 节点的当前时间。（这里应该是创建 token 的请求会发往 B 的 apiserver，目前没找到方法验证）;
B 节点里需要访问 apiserver，会访问 kubernetes.default，请求被路由到节点 A;
A 节点在校验 JWT 时发现 token 的 nbf 在 A 节点当前时间+ 1min 之后，拒绝请求;</description></item><item><title>Weekly Issue 2023-05-28</title><link>https://zdyxry.github.io/2023/05/28/Weekly-Issue-2023-05-28/</link><pubDate>Sun, 28 May 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/05/28/Weekly-Issue-2023-05-28/</guid><description>文章 链接到标题 技术 链接到标题 一个十万行的 trackback | 卡瓦邦噶！
从 PEP 3134 中发现，Python3 已经把和一个 Exception 有关的 traceback，局部变量等放到 Exception 对象中了。这里也说，你不能明确地指定一个 Python Exception 的 traceback。按照我们上面中代码的行为看，就是，Python 在 raise Exception 的时候，会把当前的 stack 写到 traceback 中，但是如果当前已经有 traceback 了的话，就会把之前的 traceback 保留住。（但是没有找到相关资料和代码，欢迎读者补充）
[[Python2]] 和 [[Python3]]关于 Exception 的处理有很大的不一样，之前学习 raise 的差异时看到过类似讨论： python - Difference between &amp;ldquo;raise&amp;rdquo; and &amp;ldquo;raise e&amp;rdquo;? - Stack Overflow
The Many Layers of Packaging — Sedimental
非常精彩的[[包管理器]] 的讨论，往往讨论 [[Python]] 的分发方式时，容易跑偏（比如：我用 venv 去打包，为啥不直接用 [[Container]]），这篇文章从不同的层面去讨论，讲的很好。
[译] NAT 穿透是如何工作的：技术原理及企业级实践（Tailscale, 2020）</description></item><item><title>Weekly Issue 2023-05-21</title><link>https://zdyxry.github.io/2023/05/21/Weekly-Issue-2023-05-21/</link><pubDate>Sun, 21 May 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/05/21/Weekly-Issue-2023-05-21/</guid><description>文章 链接到标题 技术 链接到标题 Slack Said It Had 100% Uptime. Did It Really? - Metrist
[[Slack]] 报告自己的在线时间是100%，但是实际上不是这样， [[Slack]] 自己对于停机时间的定义有些狭隘，也许是为了 100% 看着好看，说出去比较好听，但是实际上作为 [[Slack]] 的用户体验并不是这样的，部分用户确实是经历了停机时间的。作为 [[SaaS]] 服务商应该以用户体验为准。
像[[metrist]] 这类产品，如果各家服务商自己的 status 页面提供了 RSS 接口，是不是就可以被替代了。
几种使用Go发送IP包的方法
操作 IP packet 的方式。
Sandboxing and Workload Isolation · Fly
有 [[Container]] 的情况下还是用 [[Container]]，没有的话推荐使用 systemd-nspawn ，毕竟 [[systemd]] 是现在的事实标准，不需要额外的依赖。
Investigating the impact of HTTP3 on network latency for search - Dropbox
[[Dropbox]] 关于 [[HTTP/3]] 的测试数据，在可能发生数据包丢失的网络环境中， [[HTTP/3]]针对 head-of-line blocking 的处理显著降低了延迟。</description></item><item><title>Weekly Issue 2023-05-14</title><link>https://zdyxry.github.io/2023/05/14/Weekly-Issue-2023-05-14/</link><pubDate>Sun, 14 May 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/05/14/Weekly-Issue-2023-05-14/</guid><description>文章 链接到标题 技术 链接到标题 使用 FFMPEG 编辑视频
使用 [[ffmpeg]] 合并、裁剪视频。
Cilium 基于 eBPF 实现 socket 加速
使用BPF_MAP_TYPE_SOCKHASH 存储 socket 信息, BPF_PROG_TYPE_SOCK_OPS 拦截系统中 socket 建立连接操作 , BPF_PROG_TYPE_SK_MSG 拦截系统中 sendmsg 系统调用，提取 key，将数据直接重定向到对端 socket。
使用 eBPF socket 加速之后，吞吐量和发送消息大小呈线性关系。这是因为当应用程序发送较大的消息时，几乎没有额外的开销，但是当发送消息比较小时，使用 TCP/IP 协议栈，反而吞吐量会大于 eBPF socket 加速之后的吞吐量，这是由于 TCP/IP 栈默认开启了 Nagle 算法。Nagle 的算法是用来解决小数据包在慢速网络中泛滥导致拥塞的问题，在该算法中只要有一个 TCP 段在小于 TCP MSS 大小的情况下未被确认，就会进行批处理传输数据操作。这种批处理导致一次传输更多的数据并分摊开销，所以能超过 eBPF socket 加速之后吞吐量。但是随着发送消息越来越大，超过 MSS，TCP/IP 栈就会失去其批处理优势，在这些大数据包发送大小下，eBPF socket 加速凭借其低开销远远超过启用 Nagle 算法的 TCP/IP 栈的吞吐量。
你真的会使用 ChatGPT 吗？ | 第一章：Guidelines for Prompting
感觉有点像 How-To-Ask-Questions-The-Smart-Way/README-zh_CN.</description></item><item><title>Weekly Issue 2023-05-07</title><link>https://zdyxry.github.io/2023/05/07/Weekly-Issue-2023-05-07/</link><pubDate>Sun, 07 May 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/05/07/Weekly-Issue-2023-05-07/</guid><description>文章 链接到标题 技术 链接到标题 You&amp;rsquo;re Allowed To Make Your Own Tools
编写一些工具来让自己的工作/生活更舒适。
Quick tip: A time-saving Makefile for your Go projects – Alex Edwards
[[Golang]] 项目的[[Makefile]] 模板，包含常用的 tidy、lint、test、build。 可以用 [[Just]] 和[[Task]] 来替代，配合阅读： Taskfile vs Justfile :: Thanh&amp;rsquo;s Islet
Electron：厌恶，理解与成为 | pengx17
[[AFFiNE]]放弃了使用[[Tauri]] ，重新使用了[[Electron]] 。提到了一些 [[Tauri]]的问题：
Tauri在一些疑难杂症和跨平台方案上存在一些不一致的问题，这需要我们付出更多的精力和时间去解决。 我们对于Rust的掌握程度还不够熟练，这导致我们在应用开发的过程中经常会遇到一些看似简单的问题，但却卡住了很久。 Enhance Your Internet Privacy in 2023 - GeekPlux
合理的使用 [[CloudFlare]] 1.1.1.1 和 iCloud 代理来保护隐私。
生活 链接到标题 又想到了一点风险，记录下来。 - Xiaowen.Z Deployed
郭嘉基于政策有效性、金融安全等考量，通过利率管制、牌照准入等手段，保障商业银行超乎寻常的利润水平；而商业银行作为回报，要在郭嘉有需要的时候，牺牲经营业绩和股东利益，支持和服务郭嘉政策落地。这种不成文的默契以动态的方式一轮轮的持续下去，构成了中国特色社会主义金融业的底层逻辑。
书影 链接到标题 《深入理解 Linux 网络》，阅读了第三章，感觉学到不少。</description></item><item><title>Weekly Issue 2023-04-30</title><link>https://zdyxry.github.io/2023/04/30/Weekly-Issue-2023-04-30/</link><pubDate>Sun, 30 Apr 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/04/30/Weekly-Issue-2023-04-30/</guid><description>文章 链接到标题 技术 链接到标题 服务端性能优化&amp;ndash;最大QPS推算及验证 - huangyingsheng - 博客园
关于 [[QPS]] 的计算方式，最大 QPS，最佳线程数。单线程𝑄𝑃𝑆=1000𝑚𝑠/𝑅𝑇。最佳线程数 = (RT/CPU Time) x CPU 核数 x CPU利用率 。
绕过 Cloudflare 指纹护盾 | Sxyazi’s blog
貌似很多站点都会检测 [[Golang]] 的 Cipher Suites，之前应该是[[v2ray]] 提到过类似问题。通过使用 GitHub - refraction-networking/utls: Fork of the Go standard TLS library, providing low-level access to the ClientHello for mimicry purposes. 可以进行更改。
配合阅读：为什么用 Go 访问某网站始终会 503 Service Unavailable ？ | 无辄的栈
How to Gracefully Close Channels -Go 101</description></item><item><title>Weekly Issue 2023-04-23</title><link>https://zdyxry.github.io/2023/04/23/Weekly-Issue-2023-04-23/</link><pubDate>Sun, 23 Apr 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/04/23/Weekly-Issue-2023-04-23/</guid><description>文章 链接到标题 技术 链接到标题 2023 年 KCD 大连站活动后记 （2023-04-15） - 马全一/马道长
真正的后记来了，从离开腾讯后确实没有怎么关注云原生领域的发展。从当前的感觉来看，这个领域已经没有特别地创新。不知道是真的进入落地阶段，还是已经进入自嗨、回魂还是僵死。正好第二天转机到阿姆斯特丹参加 KubeCon ，是一个近距观察的机会。
Load Balancing
常见负载均衡策略讲解，图文并茂，包含轮询，加权轮询，最小连接数，以及Peak EWMA 。
配合阅读： Beyond Round Robin: Load Balancing for Latency | Linkerd 不同策略之间的差异与其说是算法上的差异，不如说是用于做出平衡决策的信息上的差异。
Pricing v3, plans, packages, and debugging · Tailscale
[[TailScale]] 更改了自己的定价策略，在现有用户数据的支持下，解释做出这样变更的原因。免费团队支持3个用户，100个设备。
nohup,setsid与disown的不同之处 - 暗无天日
nohup 会关闭进程的stdin，当进程尝试读取输入时，只会得到EOF。disown命令会将命令从bash的job list中删除。 这样，当bash收到SIGHUP信号后，并不会将SIGHUP信号发送给该命令。
若调用setsid函数的进程就是一个进程组的组长，则该函数会返回出错。 为了解决这种情况，通常函数需要先fork，然后父进程退出，由子进程执行setsid。 由于子进程继承的是父进程的进程组ID，而其PID是新分配的ID，因此这两者不可能相等，即子进程不可能是进程组的组长。 这种情况下，由于父进程先于子进程退出，因此子进程的父进程会有init进程接管。 而这就是sid命令的实现原理。
Kubernetes 1.27: Query Node Logs Using The Kubelet API | Kubernetes
[[kubernetes]] 可以通过 kubelet API 获取 Host 节点上的日志。这个功能是 [[openshift]] 贡献的。</description></item><item><title>Weekly Issue 2023-04-16</title><link>https://zdyxry.github.io/2023/04/16/Weekly-Issue-2023-04-16/</link><pubDate>Sun, 16 Apr 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/04/16/Weekly-Issue-2023-04-16/</guid><description>文章 链接到标题 技术 链接到标题 Database Architects: The Great CPU Stagnation
[[CPU]] 性能的快速增长已经消失，作者分别通过 Cores/$, (Cores*GHz * IPC)/$ 和 B transistors/$ 来进行比较，验证近5年来的发展速度缓慢。
个人网盘使用经验
大家真的有那么多东西需要存储么？感觉我日常需要的更多的是备份场景，不需要一个随时可以读写的NAS。
CodePilot | Synchronization Patterns in Go
[[Golang]] 中实现同步机制的一些方式，Mutex,Semaphore, Channel.
David Klee - vNUMA and You - YouTube
合理的配置 [[vNUMA]]来保证应用可以更好的运行，前提是你明确的知道你的应用需要多少计算资源。
实用 Web API 规范 | Log4D
[[API]] 设计规范。之前也看过一些公司的设计规范，但是很难去实际实施。
不想当作家的程序员写不出 Redis | 程序员的喵
[[redis]] 作者的一些故事。
运行良好的复杂系统往往由简单设计演化而来，而一个从开头设计的复杂系统往往不行，通过打补丁的方式通常也无法解决
Uptime Guarantees — A Pragmatic Perspective
应该追求什么级别的 [[SLA]]？理论上越高越好，但实际上从成本考虑，可能适合产品的才是最好的，需要评估宕机带来的直接损失，来确定自己可以容忍的时间，99.99% 比 99.5% 要付出的精力、成本多得多。有时候故障可能与技术实现无关，可能与运营有关。
实际的例子：Github Action Q1 故障次数达到了 55次，但是不影响大家持续的使用它，可能会带来抱怨，但是说带来的实际损失，可能也无法进行准确的评估。</description></item><item><title>Weekly Issue 2023-04-09</title><link>https://zdyxry.github.io/2023/04/09/Weekly-Issue-2023-04-09/</link><pubDate>Sun, 09 Apr 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/04/09/Weekly-Issue-2023-04-09/</guid><description>文章 链接到标题 技术 链接到标题 Read Every Single Error | Pulumi Blog
阅读每一条错误日志，人力是有限的，如果不能持续保持错误率的提高，那么随着 API 调用的增加，注定 Oncall 精力是不够的：(API Call Volume) * (Error Rate) * (Time to Triage an Error) &amp;lt; On-Call Attention 。SRE 模型和错误预算是高级时尚，而跳过步骤直接进入高级阶段并不总是有益的。相反，最好使用合适规模的工具和流程。
Sure you can hire and split systems out into separate on-call rotations to increase capacity, but our goal is to scale exponentially with respect to humans, not linearly!
引用推友的话:
最核心就是有人盯着这个事情，我们内部 sentry alert 数量从去年每分钟 300 多，今年变成 20 多，就是每周一把异常报错最多的 top5 项目拉出来，让项目负责的工程师看看具体是怎么回事。</description></item><item><title>Weekly Issue 2023-04-02</title><link>https://zdyxry.github.io/2023/04/02/Weekly-Issue-2023-04-02/</link><pubDate>Sun, 02 Apr 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/04/02/Weekly-Issue-2023-04-02/</guid><description>文章 链接到标题 技术 链接到标题 Weka Violates MinIO&amp;rsquo;s Open Source Licenses
[[Minio]] 再次撤销许可，上一次是 [[Nutanix]]。这篇报道We object! MinIO says no more open license for Weka – Blocks and Files 中提到，有用户说 [[Minio]] 每年通过许可协议收取 7位数的收益。
Why I Will Never Use Alpine Linux Ever Again | Martin Heinz | Personal Website &amp;amp; Blog
不再使用 [[alpine]] 的原因：不支持 DNS-over-TCP；很多依赖 C 的工具/库都会受到 musl 和 glibc 差异的影响。
关于 [[alpine]] DNS 问题的另一篇文章： Does Alpine resolve DNS properly? | Purplecarrot
我的AI阅读助手 · BMPI</description></item><item><title>Weekly Issue 2023-03-26</title><link>https://zdyxry.github.io/2023/03/26/Weekly-Issue-2023-03-26/</link><pubDate>Sun, 26 Mar 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/03/26/Weekly-Issue-2023-03-26/</guid><description>文章 链接到标题 技术 链接到标题 Tracking the Fake GitHub Star Black Market with Dagster, dbt and BigQuery | Dagster Blog
如何识别 [[github]]中的含有虚假star 的项目。
由一个子网掩码配置错误所想到的 | 卡瓦邦噶！
[[子网掩码]]错误配置可能出现的现象。在机房中倒是经常会遇到类似的配置错误的环境。
突破难关：Docker镜像和容器的区别以及构建的最佳实践 | MoeLove
[[容器]] 镜像的最佳实践。其中提到关于包管理的部分需要谨慎使用。
37signals Dev — De-cloud and de-k8s — bringing our apps back home
[[37Signals]] 将服务从[[公有云]] 和 [[kubernetes]] 迁移出来的记录，使用到之前开源的 [[mask]] 工具。
We updated our RSA SSH host key | The GitHub Blog
[[github]]因为短暂的泄漏了自己的私钥，进行了对应的更新。
如何高效地协作开发：一些 Google 的实践
在 Google 的三年多里，我们团队的 project manager 对于工程师来说存在感一直比较低，项管不会过多干预个人的工作计划。每个工程师都相当于自己的项管，工程师之间会互相就优先级进行沟通达成共识和妥协。这样的好处是工作量小但 block 了其他人的事情会被快速完成；实际做事情的人用专业的语言沟通，不需第三者传话，也不容易造成误解；一些重要但不紧急的事情，比如重构、还技术债，也可以由工程师在日常工作中穿插地推进。</description></item><item><title>Weekly Issue 2023-03-18</title><link>https://zdyxry.github.io/2023/03/18/Weekly-Issue-2023-03-18/</link><pubDate>Sat, 18 Mar 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/03/18/Weekly-Issue-2023-03-18/</guid><description>文章 链接到标题 技术 链接到标题 After four years of SMR storage, here&amp;rsquo;s what we love—and what comes next - Dropbox
与 [[Backblaze]] 不同， [[Dropbox]] 目前大量使用[[SMR]] 磁盘。密度高，省电，服务器数量减少，维修成本降低。
简单聊聊 IaC：Infrastructure as Code - Manjusaka
最近在使用 [[Packer]]配合 [[terraform]] 来帮助我自动的创建一些环境（虚拟机），我的创建是 [[vSphere]] 已经存在，如果只是创建新的虚拟机，那不会遇到太多问题，但是如果我想要针对某一个[[vSphere]] 集群中的所有主机增加一个 vswitch，然后新创建的虚拟机关联的是对应的 vswitch，这个需求就很难做到，首先想要从集群获取到所有主机，就需要先 import resource，而 import resource 和 code 中定义的 resource 中的状态是有很大差别的，所以import resouce 之后，需要去更新 code 中定义的对应 resource，然后继续后续步骤，整体流程一点也不 [[IaC]] ，社区中有一些自动 import resource 并生成 code 的项目，但是对于各个 provider 的支持力度有限，感觉这个场景应该在 [[terraform]] 中做，而不是去适配。
[Ipmitool-devel] GitHub account suspended | IPMItool</description></item><item><title>Weekly Issue 2023-03-12</title><link>https://zdyxry.github.io/2023/03/12/Weekly-Issue-2023-03-12/</link><pubDate>Sun, 12 Mar 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/03/12/Weekly-Issue-2023-03-12/</guid><description>文章 链接到标题 技术 链接到标题 苹果：为了安全让 M2 吃灰 | 程序员的喵
[[MacOS]] [[SIP]] 严重影响性能。
简而言之 SIP 会在我们跑任软件之前，把你的执行文件做一个校验和，然后通过网络请求发送到让人敬畏的苹果服务器，就是为了检测是否是恶意软件！
谈谈我对 ChatGPT 应用的 prompt 的看法 |
提到了一些 [[Prompt]] 小技巧。昨天内部同事在 [[slack]] 接入了 [[ChatGPT]] ，在没有合适的 [[Prompt]] 情况下，几乎是不可用的。
Python is two languages now, and that&amp;rsquo;s actually great
作者认为 [[Python]] 现在分为 untyped Python 和 typed Python ，并会永远的持续下去。最近公司的项目在从 [[Python2]] 迁移至[[Python3]] ，如果之后选择 library，那肯定会优先选择 type hints 的。
The pains of GitOps 1.0 | Codefresh
对于 [[GitOps]]管理的资源后续因为 auto-scale 等配置引发的不一致情况，[[Argo]] 通过custom diff 来避免，[[terraform]] 通过 ignore_changes ，来避免。</description></item><item><title>Weekly Issue 2023-03-05</title><link>https://zdyxry.github.io/2023/03/05/Weekly-Issue-2023-03-05/</link><pubDate>Sun, 05 Mar 2023 00:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/03/05/Weekly-Issue-2023-03-05/</guid><description>文章 链接到标题 技术 链接到标题 Coding 102: Writing code other people can read - Stack Overflow Blog
关于代码风格的示例，写出可读代码。
HTTPS 隐私安全的一些实践 | Laisky&amp;rsquo;s Blog
[[HTTPS]] 相关概念介绍。
Introducing MRSK - YouTube
[[MRSK]] 介绍，通过 DSL 和 [[docker]] 运行 [[container]] app。
Kubernetes is a beast. Running it yourself on your own hardware is not for the faint of heart. It&amp;rsquo;s a fine option if you want to run on someone else&amp;rsquo;s platform, either transparently like Render or explicitly on AWS/GCP, but if you&amp;rsquo;d like the freedom to move between cloud and your own hardware, or even mix the two, MRSK is much simpler.</description></item><item><title>Weekly Issue 2023-02-26</title><link>https://zdyxry.github.io/2023/02/26/Weekly-Issue-2023-02-26/</link><pubDate>Sun, 26 Feb 2023 19:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/02/26/Weekly-Issue-2023-02-26/</guid><description>文章 链接到标题 技术 链接到标题 Nix Is Fighting The Last War
[[Nix]] 注定是一个小众的解决方式。
Tcpdump 从 TCP_option_address 中根据真实 IP 过滤 | 卡瓦邦噶！
[[tcpdump]] 抓取 [[LVS]] 转发前的真实 IP 地址。
How Levels.fyi scaled to millions of users with Google Sheets as a backend
早起通过[[Google]][[Sheets]] 配合 [[Lambda]] 和 API Gateway 快速验证产品可行性，后续根据需要来切换到后端服务加数据库形式。
FOSDEM 2023 - I was wrong about Flatpak, AppImage, and Snap (Containerised Apps Presentation) - YouTube
讨论了AppImage、Snap和 Flatpak ，2017年以及现状，结论是使用 Flatpak 让生活更美好。
K8S 生态周报| Cilium 和 Istio 的新版本带来众多新特性 | MoeLove</description></item><item><title>Weekly Issue 2023-02-19</title><link>https://zdyxry.github.io/2023/02/19/Weekly-Issue-2023-02-19/</link><pubDate>Sun, 19 Feb 2023 19:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/02/19/Weekly-Issue-2023-02-19/</guid><description>文章 链接到标题 技术 链接到标题 uBlue · GitHub 计划基于[[Fedora]][[coreos]] 的发行版，依托于 [[ostree]] 的 [[NativeContainer]] 能力，可以很方便的使用 [[Container]]来构建自己的 Desktop。
FOSDEM 2023 - blkhash - fast disk image checksums
用来计算[[image]] checksum 的工具，比 [[SHA]] 更快，支持 format 探测等。
https://newsletter.pragmaticengineer.com/p/real-world-eng-8
[[Khan]] 将内部服务从 [[Python]] 迁移至 [[Golang]]的过程和思考，根本需求是[[Python2]] 的问题，100 人规模的开发团队，共花费 3.5 年时间完成重写。
Moving to Go will undeniably be more effort than moving to Python 3, but the performance win alone makes it worth it.
Can We Stop With Those Horrible “System Overview” Dashboards Already?</description></item><item><title>Weekly Issue 2023-02-12</title><link>https://zdyxry.github.io/2023/02/12/Weekly-Issue-2023-02-12/</link><pubDate>Sun, 12 Feb 2023 19:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/02/12/Weekly-Issue-2023-02-12/</guid><description>文章 链接到标题 技术 链接到标题 Some random thoughts on Generative AI | Reorx’s Forge
[[ChatGPT]] 大大降低了大家的使用门槛，只要你有想法，就可以快速POC。
Cloud Backup Best Practices for SMBs
云应用的[[备份]]实践，借机推广[[Snapshooter]]。
设计师如何入门前端
最后我想说，无论是设计工具还是[[前端]]代码，都只是实现创意的工具。最终能够限制创意的，只有不够开放和好奇的大脑。
Kubernetes 证书管理系列（一） | MoeLove
[[证书]]管理是个非常麻烦的事情，[[openssl]] 的命令行也是用过的命令工具里面比较难用的几个之一了。
Cloud Backup Best Practices for SMBs
云应用的[[备份]]实践，借机推广[[Snapshooter]]。
Supabase Clippy: ChatGPT for Supabase Docs
[[Supabase]] 在文档网站提供[[ChatGPT]] 功能，来辅助用户搜索。如何构建：将完整文档拆分为多份，使用 [[OpenAI]] API 将其作为输入，使用[[pgvector]] 存储到[[Postgres]] 中，获取用户问题，在[[Postgres]] 中获取问题相关的文档，讲这些文档作为[[GPT-3]] 上下文，返回给用户。
Bad Observability - SquaredUp
关于可观测需要避开的点：
Forgetting the customer; Environment inconsistency; Not understanding your ecosystem; No consistent trace ID; The big dumb metric; Bad sampling intervals; Misunderstanding metrics; Lazy synthetic transactions; A plague of dashboards; Unnecessary alerts; Hoarding data; Disconnected data; Throwing tools at a problem; Mandating tools; The chosen few;</description></item><item><title>Weekly Issue 2023-02-04</title><link>https://zdyxry.github.io/2023/02/04/Weekly-Issue-2023-02-04/</link><pubDate>Sat, 04 Feb 2023 19:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/02/04/Weekly-Issue-2023-02-04/</guid><description>文章 链接到标题 技术 链接到标题 The only thing worse than cloud pricing is the enterprisey alternatives
涉及到金钱的东西总是让人头大。企业服务的定价确实很玄幻，透明度很低。
OpenLens 6.3.0 - No Logs or Shell buttons · Issue #6823 · lensapp/lens · GitHub
[[Lens]] 删除了部分功能引发了大家对其所有权的担忧，官方在推 Desktop 版本。
Linux Load Averages: Solving the Mystery
[[Linux]][[负载]] 解释说明，其中关于TASK_UNINTERRUPTIBLE 的历史进行了调查，文章末尾提供了 性能检查列表
协议栈源端口选择性能衰减问题 - 撸代码 - LuCode.net
自kernel 4.2开始，端口资源的分配策略改了，目前奇数端口留给bind，偶数端口留给connect为了均衡资源的占用，但是显然，这种策略不适合本文所述的特殊场景，并且对于bind而言，也存在性能衰减的问题。
依次尝试去获取，当然每次获取的起点是随机的。很明显，当我们完全占用偶数组的端口后，所有后续的connect调用，所需的源端口应该位于奇数组中，然而该函数依旧会尝试完整遍历偶数组资源，这也就是__inet_check_established耗时占比这么高的原因。
Introducing Hermes, An Open Source Document Management System
[[hashicorp]] 开源的基于 [[Google Workspace]] 的文档管理系统。
iPotato | Fly.io 初体验之博客搬家</description></item><item><title>Weekly Issue 2023-01-29</title><link>https://zdyxry.github.io/2023/01/29/Weekly-Issue-2023-01-29/</link><pubDate>Sun, 29 Jan 2023 19:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/01/29/Weekly-Issue-2023-01-29/</guid><description>文章 链接到标题 技术 链接到标题 iptables详解（1）：iptables概念-朱双印博客
[[朱双印]] 关于 [[iptables]] 的基本介绍。
领英上的David Masover: #opentowork | 747 条评论
来自 [[Google]]真实事件，真正的 [[SRE]]，和这种人工作应该很幸福。
为什么镜像可以 pull 下来但是在 manifest inspect 的时候提示 no such manifest？—— Docker Buildx Attestations 检修记
[[Buildkit]] 新特性引发的兼容性问题。
Buildx v0.10 enables support for a minimal SLSA Provenance attestation, which requires support for OCI-compliant multi-platform images. This may introduce issues with registry and runtime support (e.g. GCR and Lambda). You can optionally disable the default provenance attestation functionality using provenance: false.</description></item><item><title>Weekly Issue 2023-01-22</title><link>https://zdyxry.github.io/2023/01/22/Weekly-Issue-2023-01-22/</link><pubDate>Sun, 22 Jan 2023 19:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/01/22/Weekly-Issue-2023-01-22/</guid><description>文章 链接到标题 技术 链接到标题 重构荷兰政府那个那个非常有效的代码
最近的热门讨论，编写一个根据百分比生成进度条的函数。
Cloud Spend Breakdown
[[37Signals]] 发布了2022 公有云服务的账单，其中关于数据存储和数据相关服务占比达到了70% ，这部分是最难迁移出来了，期待后续。
What&amp;rsquo;s what with Wolfi, the Linux &amp;ldquo;undistribution,&amp;rdquo; and ARM | Open Source Watch
对[[Wolf]] 项目的介绍，用来应对供应链攻击。
State of Infrastructure-from-Code 2023 - Klotho
[[IaC]] 之后谈论[[IfC]] ，在IaC 场景下，开发人员通常需要考虑业务应用程序和基础设施两种应用。
[[IfC]] 通过分析业务应用代码来推断所需的基础资源，然后自动创建并维护，不需要手动指定。目前已有的方向是通过 SDK、通过代码注释、两者结合、通过新的编程语言实现。预测 [[IfC]] 会在之后愈发流行。 [[IfC]] 创建的资源如何管理？如何保证应用程序没有滥用资源？
How to use interfaces in Go | jordan orelli
关于 [[Golang]] [[interface]] 使用上的总结。
How to improve Python packaging, or why fourteen tools are at least twelve too many | Chris Warrick</description></item><item><title>Weekly Issue 2023-01-15</title><link>https://zdyxry.github.io/2023/01/15/Weekly-Issue-2023-01-15/</link><pubDate>Sun, 15 Jan 2023 19:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2023/01/15/Weekly-Issue-2023-01-15/</guid><description>文章 链接到标题 技术 链接到标题 Deploy Kubernetes on Equinix Metal - Kubeadm via Userdata and Cloud-config
[[Equinix]] 通过 [[cloud-init]] 配合 [[kubeadm]] 部署 [[kubernetes]] 集群。
Buf | Introducing buf curl - Call your gRPC endpoints with the simplicity of buf
[[bufbuild]] 的 [[grpc]] 命令行。
Scaling Kubernetes to Thousands of CRDs
[[Crossplane]] 管理上千个 [[CRD]] 遇到的问题和改进方式。（现在好像一个 [[kubernetes]] 集群里面的 CRD 上百也不稀奇。
简洁的 Bash Programming 技巧 - 团子的小窝
[[Bash]] 中 -- 后面的参数不会被当做选项解析。
How Docker 2.0 went from $11M to $135M in 2 years</description></item><item><title>Weekly Issue 2022-12-11</title><link>https://zdyxry.github.io/2022/12/11/Weekly-Issue-2022-12-11/</link><pubDate>Sun, 11 Dec 2022 19:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2022/12/11/Weekly-Issue-2022-12-11/</guid><description>文章 链接到标题 技术 链接到标题 dracut-shutdown: unpack the initramfs to /run/initramfs - Linux Man Pages (8)
[[systemd]] shutdown 与[[dracut-shutdown]] 的调用关系。
我 EKS 内的 Pod 怎么连不上某个 EC2 了？奇怪的 Docker Compose 桥接网络 Debug 记 想到了公司最近内部新添加了网段是 172.16，也跟 [[docker]] 是重叠的。
TSMC founder Morris Chang says globalization &amp;lsquo;almost dead&amp;rsquo; -Nikkei Asia
globalization and free trade are almost dead
From 20MB to 20TB: 40 Years of HDD Technology - StorageNewsletter
[[HDD]] 40 年时间容量从 20MB 到 20TB。</description></item><item><title>Weekly Issue 2022-12-04</title><link>https://zdyxry.github.io/2022/12/04/Weekly-Issue-2022-12-04/</link><pubDate>Sun, 04 Dec 2022 19:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2022/12/04/Weekly-Issue-2022-12-04/</guid><description>文章 链接到标题 技术 链接到标题 聊聊 Docker 的存储驱动 Overlay2 | MoeLove [[overlayfs]] 介绍。
Ask HN: Azure has run out of compute – anyone else affected? | Hacker News [[azure]] 德国无法扩容更多容量，看评论(各家)都已经遇到很多次了。
Linux RT 进程引发内核频繁卡死的优化方案
经过查看内核 RT 实现，发现 RT 进程是有相关的占用时间设置的 /proc/sys/kernel/sched_rt_runtime_us ,sched_rt_runtime_us 的默认值为 950000，代表 RT 进程可以占用 95% 的 CPU 时间片，剩余 5% 用于响应其他请求，而这里比较诡异的是为什么 sched_rt_runtime_us 明明设置了 950000 这个值，surfaceflinger 这个程序为什么还能将 CPU 使用到 100% 呢？
经过代码分析和社区 issues 查找，**发现引发该问题的罪魁祸首是 RT_RUNTIME_SHARE 这个特性，该特性可以使 RT 任务长期占用 100% CPU, 从而使诸如 kworkers 等相关的内核任务无法获取到 CPU 资源，造成内核卡死。**而客户使用的内核版本恰好是 5.</description></item><item><title>Weekly Issue 2022-11-27</title><link>https://zdyxry.github.io/2022/11/27/Weekly-Issue-2022-11-27/</link><pubDate>Sun, 27 Nov 2022 19:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2022/11/27/Weekly-Issue-2022-11-27/</guid><description>文章 链接到标题 技术 链接到标题 搭建旁路由 - Jiajun的编程随想 使用[[Debian]] 配合 [[Clash]] 搭建旁路由。
Will Twitter Fail? [[Twitter]] 会失败么？会因为什么原因失败？感觉在系统不上线新功能的前提下，不会发生宕机。
What a Broken Wheel Taught Google Site Reliability Engineers - The New Stack 一些看似不相关的事情产生的影响，有趣。
quobix: M.A.R.V.I.N [[vmware]] [[VXRail]] 的故事，从零到一。
Risk in the Wild – DevelopSense
Most testing is motivated by the intention to go from speculation about suspected risk to evidence of actual risk.
Rakuten dumps Red Hat, turns to “true” open-source Linux OS, Digital Platforms &amp;amp; Services | TelecomTV 乐天从RHEL 迁移至 Rocky</description></item><item><title>Weekly Issue 2022-11-20</title><link>https://zdyxry.github.io/2022/11/20/Weekly-Issue-2022-11-20/</link><pubDate>Sun, 20 Nov 2022 23:50:00 +0000</pubDate><guid>https://zdyxry.github.io/2022/11/20/Weekly-Issue-2022-11-20/</guid><description>文章 链接到标题 技术 链接到标题 K8S 生态周报| 基础库放弃维护，上游社区如何选择？ | MoeLove
GoGo Protobuf 停止维护(很久)了，很多 [[protobuf]] 的示例项目和生产项目都是使用这个。
Welcome to the Supercloud (and Developer Week 2022)
Efficient compute and storage, a global network that’s everywhere everyone is, bound together by software that turns the globe into a single cloud. The Supercloud.
Scaling Mastodon is Impossible | Armin Ronacher&amp;rsquo;s Thoughts and Writings
从中心化/去中心化，[[Mastodon]] 协议和托管者的法律风险角度，讨论 [[Mastodon]] 替代 [[Twitter]] 的可能性。
Sapling: Source control that’s user-friendly and scalable</description></item><item><title>Weekly Issue 2022-11-13</title><link>https://zdyxry.github.io/2022/11/13/Weekly-Issue-2022-11-13/</link><pubDate>Sun, 13 Nov 2022 23:50:00 +0000</pubDate><guid>https://zdyxry.github.io/2022/11/13/Weekly-Issue-2022-11-13/</guid><description>文章 链接到标题 技术 链接到标题 2022 年里做前端是怎样一种体验 - rxliuli blog
感觉 2016年和2022年之间发生了什么了不得的事情，各种名词给变了一圈了。
Modern Python Environments - dependency and workspace management 对 pyenv ,pip + venv, poetry, pipenv 进行了比较。
Python Tools for Managing Virtual Environments 除了针对 venv，virtualenv介绍之外，还比较了 Pyflow、Poetry、Hatch 等较新的 project management 工具。
Why add another Python manager? pyflow 讲述为什么需要一个 Python 管理器。
The state of Python Packaging
关于 Python 包管理演进的3篇文章。
Python Meetup 第3期 | Python最新语言特征
49分38秒开始，[[PDM]] 作者讲解 PEP582 及 PDM 实现。
Debian 系统上捉摸不定的 Python</description></item><item><title>Weekly Issue 2022-11-06</title><link>https://zdyxry.github.io/2022/11/06/Weekly-Issue-2022-11-06/</link><pubDate>Sun, 06 Nov 2022 23:50:00 +0000</pubDate><guid>https://zdyxry.github.io/2022/11/06/Weekly-Issue-2022-11-06/</guid><description>文章 链接到标题 技术 链接到标题 编写可维护的单元测试代码
介绍 GoConvey 和 testify 两种单测框架。公司内部用 Ginkgo 比较多。
2022 年 10 月 25 日 Cloudflare 服务部分故障
[[CloudFlare]] 故障复盘，在引入 opentracing 时清理了部分 header 信息，导致上游逻辑判断错误。
Give Your Tail a Nudge
[[Nudge]] 对于 [[FCFS]] 的优化：
The intuition behind the Nudge algorithm is that we’d like to basically stick to FCFS, which we know is great for handling the extreme tail (high 𝑡), while at the same time incorporating a little bit of prioritization of small jobs, which we know can be helpful for the mean and lower 𝑡.</description></item><item><title>Weekly Issue 2022-10-30</title><link>https://zdyxry.github.io/2022/10/30/Weekly-Issue-2022-10-30/</link><pubDate>Sun, 30 Oct 2022 23:50:00 +0000</pubDate><guid>https://zdyxry.github.io/2022/10/30/Weekly-Issue-2022-10-30/</guid><description>文章 链接到标题 技术 链接到标题 Python 工匠：语句、表达式和海象操作符
关于复制表达式的使用场景介绍。
如果是一个私人脚本，也许我会愿意把代码写成上面那样。但在多人参与的真实项目里，我目前可能更愿意用一段平平无奇的 for 循环替代它。很多时候，相比“聪明”的代码，“笨”代码才是我们更需要的东西，它们能为项目的参与者省去许多沟通和维护上的成本。 LINUX PID 1 和 SYSTEMD
关于 init 进程的演进。
How Salesforce Built a Cloud-Native Task Execution Service
关于 [[Salesforce]] 的 [[Hyperforce]] 介绍。
深入（彻底）理解闭包实现原理
使用 Golang 来讲解闭包。
生活 链接到标题 A &amp;ldquo;real&amp;rdquo; day in the life of an SRE.
I decide to take a break for breakfast. I am a little annoyed with myself for not having got any &amp;lsquo;real&amp;rsquo; work done before my first break.</description></item><item><title>Weekly Issue 2022-10-23</title><link>https://zdyxry.github.io/2022/10/23/Weekly-Issue-2022-10-23/</link><pubDate>Sun, 23 Oct 2022 23:50:00 +0000</pubDate><guid>https://zdyxry.github.io/2022/10/23/Weekly-Issue-2022-10-23/</guid><description>文章 链接到标题 技术 链接到标题 电信宽带 ipv6 折腾记
运营商配置变化太快。
Be Lean, Go Far: leveraging Kubernetes for an elastic right-sized platform
将业务迁移到 kubernetes 后所做的资源分配调度优化，需要 GKE 背景知识。
You can only improve what you measure
GitHub Copi­lot inves­ti­ga­tion
关于 [[github]] [[copilot]] 调查，除了讨论[[copilot]] 会导致开源协议的错误引入之外，还讨论 [[copilit]] 让用户只关心自己想要的内容(代码)，而不关心背后的社区。
Web 玩具项目技术栈
采用 [[Next.js]] [[Supabase]] [[Fly.io]] 运行个人项目，成本为0 。
关于swap 的一些补充
误解1: swap 是虚拟内存，虚拟内存肯定比物理内存慢嘛 误解2: 但是没有交换区的话，虚拟内存地址都有物理内存对应嘛 误解3： 不是内存快用完的时候才会交换的么？惰性分配有什么好处？那么内核什么时候会开始回收内存？
Why we&amp;rsquo;re leaving the cloud
Basecamp 谈论为什么不使用公有云。AWS 利润率达到 30%。
之前阅读过类似的文章：
Use One Big Server</description></item><item><title>Weekly Issue 2022-10-16</title><link>https://zdyxry.github.io/2022/10/16/Weekly-Issue-2022-10-16/</link><pubDate>Sun, 16 Oct 2022 23:50:00 +0000</pubDate><guid>https://zdyxry.github.io/2022/10/16/Weekly-Issue-2022-10-16/</guid><description>文章 链接到标题 技术 链接到标题 Startup Ideas I&amp;rsquo;ve Considered
无代理可观测性平台、机器学习基础设施、表格系统、安全、VPN、BaaS、版本控制。
为你的 Python 应用选择一个最好的 Docker 映像
如何选择 容器 镜像是一个需要仔细调研权衡的问题，从各方面考虑 alpine 不是一个好选择。
Infrastructure Defined Software
Puppet 2009, Salt 2011, Ansible 2012 CloudFormation 2011, Terraform 2014 Pulumi 2017, AWS CDK 2019 下一步是什么？ 白话Kubernetes入门实践
k8e 作者关于 kubernetes 的一系列文章，持续更新中。
Why Linkerd doesn&amp;rsquo;t use Envoy
将 Cloudflare 连接到互联网的代理——Pingora 的构建方式
为什么 Linkerd 不使用 envoy. - 复杂度、资源消耗、安全。 - But what if we have a requirement to use Envoy? I would argue that’s not a real requirement.</description></item><item><title>Weekly Issue 2022-09-25</title><link>https://zdyxry.github.io/2022/09/25/Weekly-Issue-2022-09-25/</link><pubDate>Sun, 25 Sep 2022 23:50:00 +0000</pubDate><guid>https://zdyxry.github.io/2022/09/25/Weekly-Issue-2022-09-25/</guid><description>文章 链接到标题 技术 链接到标题 How I’m a Productive Programmer With a Memory of a Fruit Fly
通过 [[doc2dash]] 来制作 [[Dash]] 文档。
用 CFSSL 从零构建一套 PKI
使用 [[cfssl]] 代替 [[openssl]] 管理证书。
SUB-NUMA CLUSTERING
介绍 Sub-NUMA-Clustering ，目前来看除非是性能特别敏感的场景，其他场景没什么用。服务器如果启用了一些[[虚拟化]]的高级选项，可能会导致 Sub-NUMA-CLustering 开启，从而导致节点的 [[NUMA]] 数量超过预期。
Going originless with Cloudflare Workers – Building a Todo app – Part 1: The API
使用 [[CloudFlare]] 全家桶： Workers，D1 来构建一个 Todo APP。
Systemd support is now available in WSL!
[[WSL]] 支持 systemd，是时候再给 [[WSL]] 一次机会了。</description></item><item><title>Weekly Issue 2022-09-18</title><link>https://zdyxry.github.io/2022/09/18/Weekly-Issue-2022-09-18/</link><pubDate>Sun, 18 Sep 2022 23:50:00 +0000</pubDate><guid>https://zdyxry.github.io/2022/09/18/Weekly-Issue-2022-09-18/</guid><description>文章 链接到标题 技术 链接到标题 Kubernetes overstretched
这几年抱怨 k8s 的也不少. 一方面是 k8s 越来越成为事实上的标准(借“Cloud Native”之风), 在各大中小厂落地. 很多人被潮流裹挟不得不用, 心里未必愿意. 场景未必适合, 加上心不甘情不愿, 遇到麻烦就容易不满. 另一方面, 为了进一步提升适用范围和可定制性, k8s 开放出了越来越复杂的插件机制: custom apiserver, scheduler-extender, volume provisioner, federation, edge proxy, knative, etc.. 最初方便扩展的开放性, 反而带来了越来越高的复杂度. 在我看来, 在90%的场景下, 大部分开发者其实用不着, 也最好别碰这些东西; 剩下10%的特殊需求, 最好交给专门的云厂商做. 但不贴上高级词汇, 怎么向公司体现自身价值呢? 于是也跟在后面亦步亦趋, 做出不伦不类的东西, 结果越改越难用.如果要上升一下, 就是工具有自己的舒适区. 工具原来是为哪种场景设计的, 就最适合在相应的场景下使用. 突破界限做成一个普适的东西, 多半会增加痛苦. 然而古往今来能被滥用的技术, 就没有不被滥用的. 可扩展性越高越会被滥用, 就像性能越高越会被用户往死里捅一样. No good deed goes unpunished, as always.
Traditional Packaging is not Suitable for Modern Applications</description></item><item><title>Weekly Issue 2022-09-11</title><link>https://zdyxry.github.io/2022/09/11/Weekly-Issue-2022-09-11/</link><pubDate>Sun, 11 Sep 2022 23:50:00 +0000</pubDate><guid>https://zdyxry.github.io/2022/09/11/Weekly-Issue-2022-09-11/</guid><description>文章 链接到标题 技术 链接到标题 容器技术之发展简史
容器技术以及公有云容器功能支持历史。
如何编写低耦合可维护的 Python 代码
通过观察者模式和装饰器模式来编写可维护代码。
CPU 是如何与内存交互的?
How to send raw network packets in Python with tun/tap
如何使用 [[Python]] 发送读取 [[TUN]] 设备数据。
What&amp;rsquo;s Inside Of a Distroless Container Image: Taking a Deeper Look
如何选择基础 [[Container]] [[image]] 一直是一个比较重要的考虑，比如很多人不推荐的 [[alpine]]，小而美，但是 [[musl]] 不那么美。很多人推荐使用标准发行版，但是又觉得大小太大不利于分发。 [[Distroless]] 是一个可以看到的方向，但是我个人在不能完全确定自己的项目中是否依赖了某些隐式的内容时，应该还是会使用标准发行版，比如[[Debian]] 或者 [[Fedora]]。
In Pursuit of Better Container Images: Alpine, Distroless, Apko, Chisel, DockerSlim, oh my!
博主在 [[Twitter]] 上发起了一些关于 [[Container]] [[image]] 的投票，一些人表面关注 CVE，实际上还是更关注镜像大小。 [[alpine]] 是目前大多数项目的选择，但是已经出现了一些替代品。</description></item><item><title>Weekly Issue 2022-09-04</title><link>https://zdyxry.github.io/2022/09/04/Weekly-Issue-2022-09-04/</link><pubDate>Sun, 04 Sep 2022 10:50:00 +0000</pubDate><guid>https://zdyxry.github.io/2022/09/04/Weekly-Issue-2022-09-04/</guid><description>文章 链接到标题 技术 链接到标题 什么时候你第一次读懂了「云技术」？
通过具体的工业场景解释什么是云。
wifi有关的一些问题
关于 Wifi 概念以及计算方式的讲解。
可扩展服务设计原则 checklist
开发应用的基本设计原则，包含基本原则、整体设计、自动化管理、依赖管理、发布周期、测试、审计、监控告警
有赞TCP网络编程最佳实践
在net.ipv4.tcp_retries2默认配置下，可能还是一直等到15min左右才能感知到网络异常。
Introducing vSphere 8!
问：当你安装了 vSphere 8，你实际安装了多少个 ESXi 和多少个虚拟机？
Kubernetes 1.25: cgroup v2 graduates to GA
[[kubernetes]] 正式支持 [[cgroup]] v2 。kubelet 和 container runtime 使用 systemd 来做 cgroup 管理。
cgroup v2 offers several improvements over cgroup v1, such as the following:
Single unified hierarchy design in API Safer sub-tree delegation to containers Newer features like Pressure Stall Information Enhanced resource allocation management and isolation across multiple resources Unified accounting for different types of memory allocations (network and kernel memory, etc) Accounting for non-immediate resource changes such as page cache write backs Linux IO</description></item><item><title>Weekly Issue 2022-08-28</title><link>https://zdyxry.github.io/2022/08/28/Weekly-Issue-2022-08-28/</link><pubDate>Sun, 28 Aug 2022 10:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2022/08/28/Weekly-Issue-2022-08-28/</guid><description>文章 链接到标题 技术 链接到标题 Steam Deck, Linux Container and the Arch Community
关于 [[Steam Deck]] OS 的介绍，底层是 [[Arch]] Linux，采用的是 A/B 升级方式，应用采用 [[Flatpak]] 方式进行安装升级(保证安全性)。现在关于这种 OS 比较轻，应用采用容器化的模式应该是很成熟了。
Global Code Time Report
编码时间报告。平均每天编码时间少于 1 小时，周三是编码时间最多的，很少有开发人员每天编码时间超过 2 小时。
(A few) Ops Lessons We All Learn The Hard Way
一些“经验”教训。比如：在某个你没有在意过的服务，会解析 DNS来完成某项工作。关掉 TCP 53 可能会有奇怪的事情发生。正在查看的源代码不是在生产中运行的代码。如果一周内没有完成故障复盘，那有可能永远也无法完成。没有人知道你在做什么。
Slacker: Fast Distribution with Lazy Docker Containers
76%的时间花费在镜像的拉取。容器真正运行需要的有效数据只占用镜像大小的 6%。
镜像大小中，低层级(&amp;lt;9)的数据占到了镜像大小的一半以上。
Kubernetes 中 Descheduler 组件的使用与扩展
Descheduler 通过触发 Pod 的驱逐，来保证集群内资源分布均衡，达到 DRS效果。作者提出了 Descheduler 改进后的评估方式。</description></item><item><title>Weekly Issue 2022-08-21</title><link>https://zdyxry.github.io/2022/08/21/Weekly-Issue-2022-08-21/</link><pubDate>Sun, 21 Aug 2022 23:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2022/08/21/Weekly-Issue-2022-08-21/</guid><description>文章 链接到标题 技术 链接到标题 与 CentOS 社区委员对话后 CentOS 时代
[[centos]] stream 之前的阶段，用户很难参与到 [[RHEL]] 的研发阶段，无法直接通过 [[centos]] 贡献代码，来保证下一个版本的 [[centos]] 包含自己所发现的问题修复，只能通过贡献给组件自身，然后由 RedHat 开发人员决定是否包含在下一个版本中。在 [[centos stream]] 之后的阶段，用户可以直接贡献给 [[centos]]，保证 [[centos]] 包含问题修复，至于 [[RHEL]] 是否修复，由 RedHat 自身决定。
关于 Fedora、Stream，还有 RHEL 未来的发展计划是什么？
从社会组织的维度： Fedora：主题是如何提高对 Fedora 的贡献，如何使得社区更多样化； CentOS Stream：和 Fedora 差不多，提高社区贡献和使社区更多样化，另外就是发展 SIG（特殊兴趣小组），充分发挥 SIG 的作用； RHEL：进一步繁荣包括社区、合作伙伴、客户的 RHEL 生态 从代码的维度： Fedora： 集成上游社区最新最好的代码，功能最丰富，做业界的引领者； 面向特定的场景，做特色的发行版，如 Fedora IoT 就是面向物联网场景的 Fedora 操作系统。 CentOS Stream： RHEL 稳定可靠的持续交付版，用户可以提前看到即将发布的 RHEL 版本； 基于稳定的代码基础，通过社区发展 SIG，在特定领域创新。 RHEL： 我们面向客户的销售团队有很多关于产品的介绍，但我今天不是来为产品做广告的。我相信红帽大中华区的同事们可以给您很好的支持。 面试题：开发新功能和重构老代码之间怎么选？
对于所有商业公司来说，第一原理永远是商业，不是产品也不是技术。</description></item><item><title>Weekly Issue 2022-08-14</title><link>https://zdyxry.github.io/2022/08/14/Weekly-Issue-2022-08-14/</link><pubDate>Sun, 14 Aug 2022 13:00:00 +0000</pubDate><guid>https://zdyxry.github.io/2022/08/14/Weekly-Issue-2022-08-14/</guid><description>文章 链接到标题 技术 链接到标题 2022-31: Databend 的工程效率实践
[[Databend]] 效率工程介绍，使用 SaaS 来完成大部分工作，Self Host Github Runner 尽量使用 [[AWS]] 内部服务，来减免流量费用。
效率工程体会：
摆正定位 渐进变更 公开透明 Improving the Experience of Making Envoy Route Changes
[[Lyft]] 针对 [[envoy]] 配置方式进行的改进，原有存在的问题：
原有路由配置使用[[Jinja]] 模版进行维护，无法进行很好的语法检查和验证，现已替换为 [[Golang]]
原有 [[envoy]] API 在配置平面和控制平面都被引用，当 [[envoy]] 升级时，都需要考虑兼容性问题，现在只在控制平面引用
原有Route table check tool 无法进行很好的分发（为啥一个 binary 会不好分发呢？），改为内部检查工具，并添加了 CI 检测结果。
容器 CPU 和 Memory 限制行为简述
关于 CPU 和 Memory cgroup 基本配置参数介绍。
Avoiding CPU Throttling in a Containerized Environment</description></item><item><title>Weekly Issue 2022-08-07</title><link>https://zdyxry.github.io/2022/08/07/Weekly-Issue-2022-08-07/</link><pubDate>Sun, 07 Aug 2022 23:59:00 +0000</pubDate><guid>https://zdyxry.github.io/2022/08/07/Weekly-Issue-2022-08-07/</guid><description>文章 链接到标题 技术 链接到标题 2022-30: 如何维护一个开源项目
明确自己的项目预期，后续的发展路线以及如何与开发者沟通。
How Our Bare Metal Cloud Keeps up with All the New OS Releases
[[Equinix]] 如何进行发行版的快速验证工作的介绍。之前一直是手动测试验证(无法想象)，现在通过 [[BuildKite]] ，通过 DSL 来描述 OS 内容，使用 [[virt-customize]] 来进行配置改动，改动完整后，推送到 S3，进行自动化测试，最终推送给客户。
采用 [[Buildkite]] 的原因：
支持动态 pipeline，可以进行条件判断 允许 pipeline 进行交互输入 可以自定义运行形态(环境) 不同架构可以共用一套 Pipeline [[BuildKite]] 学习成本不低。
程序 Hot reload config 的实现方式
监听文件(我自己比较常用的方式) 每次都reload 监听HUP 信号 10 Kubernetes Security Context settings you should understand
关于 [[kubernetes]] 安全配置的一些方法(感觉大部分人都用不上)
The people of the cloud</description></item><item><title>Weekly Issue 2022-07-31</title><link>https://zdyxry.github.io/2022/07/31/Weekly-Issue-2022-07-31/</link><pubDate>Sun, 31 Jul 2022 23:59:00 +0000</pubDate><guid>https://zdyxry.github.io/2022/07/31/Weekly-Issue-2022-07-31/</guid><description>文章 链接到标题 技术 链接到标题 一些 System Design 面试的建议
明确需求；定义系统接口和业务 Entity；画一个架构图；讨论具体细节。
A Checklist Manifetsy
维护自己的检查清单可以对所做内容更有掌控感。
Alerts, what are they good for?
如何设置报警规则？在我司通常是依靠经验拍脑袋。作者提出了一个可以量化的规则来 评估规则：
影响：越严重则数值越大
频率：发生频率越高，则数值越大
可恢复性：如果涉及到的问题所需要手动工作量越大，则数值越大
最终计算方式为(i+f)*r ，作者给出了数值建议：
1–19 ignore
20–49 alert
50–79 evaluate the event. is it rated properly and if yes, what improvements can be made if any. The below example of US East 1 going down is a worse case scenario that relies on DR however, with good monitoring, can be detected and actioned</description></item><item><title>Weekly Issue 2022-07-24</title><link>https://zdyxry.github.io/2022/07/24/Weekly-Issue-2022-07-24/</link><pubDate>Sun, 24 Jul 2022 18:55:00 +0000</pubDate><guid>https://zdyxry.github.io/2022/07/24/Weekly-Issue-2022-07-24/</guid><description>文章 链接到标题 技术 链接到标题 如何劫持 docker.io 的镜像流量到私有仓库
通过修改Client 受信证书将 docker.io 流量转发到内部其他 registry。
问题：所有 Client 都需要进行证书配置。如果证书这环节出了问题，会引发较大安全问题。
周刊（第22期）：图解一致性模型
通过发布朋友圈作为示例来描述：顺序一致性、线性一致性、因果一致性。
顺序一致性条件：
条件1：每个进程的执行顺序要和该进程的程序执行顺序保持一致。
条件2：对变量的读写要表现得像FIFO一样先入先出，即每次读到的都是最近写入的数据。
线性一致性条件，在顺序一致性的基础上，增加：
条件3：不同进程的事件，如果在时间上不重叠，即不是并发事件，那么要求这个先后顺序在重排之后保持一致。
因果一致性是更弱的一致性，只要满足happen-before关系即可。由于happen-before关系实际上是由Lamport时钟定义的，这是一种逻辑时钟，所以不同的读者看到的先后顺序可能会有点反直觉，但是只要满足happen-before关系就是正确的。
工程效能CI/CD之流水线引擎的建设实践
美团内部 CI/CD 发展过程。在 jenkins 阶段遇到了调度瓶颈、资源管理瓶颈，Jenkins 多集群方式管理困难，转为自研。
spf13 Google &amp;ndash;&amp;gt;
spf13 从 [[Google]] 离职加入了Two Sigma
When I first joined there was so much to learn about both Go and working within Google. My learning had slowed down dramatically. I was torn. I loved the team and the work we were doing, but was feeling personally stagnant.</description></item><item><title>Weekly Issue 2022-07-17</title><link>https://zdyxry.github.io/2022/07/18/Weekly-Issue-2022-07-17/</link><pubDate>Mon, 18 Jul 2022 22:03:36 +0000</pubDate><guid>https://zdyxry.github.io/2022/07/18/Weekly-Issue-2022-07-17/</guid><description>文章 链接到标题 Side Project 成本最小化运维
现成的 SaaS &amp;gt; 基于库实现 &amp;gt; 自己从软件方面实现 &amp;gt; 使用新的开源项目额外部署系统来实现。现在的各个 SaaS 已经非常成熟了，大部分场景都可以涵盖到，不建议把时间花费在运维维护工作上。
Setting the Number of Cores per CPU in a Virtual Machine
关于 [[vmware]] ESXi 虚拟机 CPU 配置说明
When you define the number of logical processors (vCPUs) for a VM, prefer the cores-per-socket configuration. Continue until the count exceeds the number of CPU cores on a single NUMA node on the ESXi server. Use the same logic until you exceed the amount of memory that is available on a single NUMA node of your physical ESXi server.</description></item></channel></rss>