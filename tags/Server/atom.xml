<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Server on Yiran's Blog</title><link>https://zdyxry.github.io/tags/Server/</link><description>Recent content in Server on Yiran's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 12 Dec 2018 22:18:15 +0000</lastBuildDate><atom:link href="https://zdyxry.github.io/tags/Server/atom.xml" rel="self" type="application/rss+xml"/><item><title>戴尔服务器 iDrac 配置</title><link>https://zdyxry.github.io/2018/12/12/%E6%88%B4%E5%B0%94%E6%9C%8D%E5%8A%A1%E5%99%A8-iDrac-%E9%85%8D%E7%BD%AE/</link><pubDate>Wed, 12 Dec 2018 22:18:15 +0000</pubDate><guid>https://zdyxry.github.io/2018/12/12/%E6%88%B4%E5%B0%94%E6%9C%8D%E5%8A%A1%E5%99%A8-iDrac-%E9%85%8D%E7%BD%AE/</guid><description>背景 Link to heading 之前介绍过超微的 IPMI 配置时提过，超微的 IPMI 是最简陋的，最近在用戴尔服务器的时候碰到了一个比较坑的事情，查了资料解决了，更加坚定之前的结论，IPMI 相应的配置尽量独立。
问题 Link to heading 在戴尔服务器安装 CentOS 后，可见网卡比预期要多出一块，物理服务器安装了两块 PCIe 网卡，一块千兆，一块万兆，每块网卡有两个网口，那么理应在服务器看到的应该是 4个网口，即 ip ad 看到的应该是
root@node11 22:24:49 ~]$ip ad |grep enp 2: enp94s0f0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc mq master ovs-system state UP qlen 1000 3: enp24s0f0: &amp;lt;NO-CARRIER,BROADCAST,MULTICAST,UP&amp;gt; mtu 1500 qdisc mq portid 3cfdfe6c9e10 state DOWN qlen 1000 4: enp24s0f1: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc mq master ovs-system portid 3cfdfe6c9e12 state UP qlen 1000 5: enp94s0f1: &amp;lt;NO-CARRIER,BROADCAST,MULTICAST,UP&amp;gt; mtu 1500 qdisc mq state DOWN qlen 1000 但是安装完 OS，发现多出一块网口 eno16 ，通过 ethtool 工具查看，发现该网口为千兆，且处于连接状态，最开始没多想，直接将该网口作为管理网络配置了，一切正常。</description></item><item><title>超微服务器 IPMI 连接配置介绍</title><link>https://zdyxry.github.io/2018/11/10/%E8%B6%85%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%99%A8-IPMI-%E8%BF%9E%E6%8E%A5%E9%85%8D%E7%BD%AE%E4%BB%8B%E7%BB%8D/</link><pubDate>Sat, 10 Nov 2018 19:41:42 +0000</pubDate><guid>https://zdyxry.github.io/2018/11/10/%E8%B6%85%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%99%A8-IPMI-%E8%BF%9E%E6%8E%A5%E9%85%8D%E7%BD%AE%E4%BB%8B%E7%BB%8D/</guid><description>背景 Link to heading 目前在国内，大部分公司使用的服务器均为国内厂商的，如：华为、浪潮、联想、华三（H3C）、曙光等等。无论是从售后服务角度，还是国企央企招标采购角度，都是比较理想的。 但是还是有些国外的服务器如：惠普、超微、戴尔等等，占有着很大的市场。现在所在的公司提供一体机给客户，OEM 厂商就是超微和戴尔，今天来说说超微服务器 IPMI 连接配置。
IPMI Link to heading 常规操作，先贴上维基百科的解释：
智能平台管理接口（Intelligent Platform Management Interface）原本是一种Intel架构的企业系统的周边设备所采用的一种工业标准。IPMI亦是一个开放的免费标准，用户无需支付额外的费用即可使用此标准。
就日常使用来说，IPMI 就是规模较大公司中常说的 带外网络 可连接控制的接口。一般用于物理服务器的管理，如：开关机、Web Console、硬件信息获取、硬件故障报警等功能。
大多数服务器厂商对该接口叫法不同，比如超微叫 IPMI，戴尔叫 RACADM ，惠普叫 iLo 等等。大部分厂商都会对该接口进行各种定制化功能，使用户上手更容易。而超微不同，超微的 IPMI 管理界面相当简（丑）陋，除了必备的功能外，没有特色功能。
连接方式 Link to heading IPMI 接口就是一个普通的 1GbE 网口，常规连接到交换机上配置 IP 就可以正常管理与使用了，下面主要来说下三种不同的配置方式优势及区别。
Dedicated Link to heading 专用模式，没有其他的乱七八糟配置，最简单的配置 IP 连接网线就可以直接使用。使用的网口就是 IPMI 的网口。
优势
最简配置，无须负责的网络策略。
劣势
需要单独的一根网线连接。在现阶段高密度服务器越来越流行的今天，一台普通的 2U4节点服务器，后面连接的网线可能达到：（1 IPMI + 2 管理 + 2 存储）*4 = 20根。这个数量是极为恐怖的，相信亲手布线过的同学一定深有体会。
Shared Link to heading 共享模式。允许 IPMI 通过板载网口进行连接。这里要明确下，在有网络要求的公司，应该是不允许配置该模式的，因为客户要求网络要做到带内、带外的完全隔离，不能允许通过带内网络访问带外网络功能。但是小公司或者说一些测试环境，是可以选择该模式的。</description></item><item><title>硬件故障坑死人（持续更新）</title><link>https://zdyxry.github.io/2018/09/27/%E7%A1%AC%E4%BB%B6%E6%95%85%E9%9A%9C%E5%9D%91%E6%AD%BB%E4%BA%BA%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</link><pubDate>Thu, 27 Sep 2018 09:35:44 +0000</pubDate><guid>https://zdyxry.github.io/2018/09/27/%E7%A1%AC%E4%BB%B6%E6%95%85%E9%9A%9C%E5%9D%91%E6%AD%BB%E4%BA%BA%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</guid><description>背景 Link to heading 因为公司提供的产品不单单是软件形式提供，还对应的提供一体机形式（服务器 &amp;amp; 相应软件）。正式工作2年多也接触到了一些硬件的坑，特此总结。
磁盘 Link to heading 因为公司主要提供的产品是分布式存储和虚拟化相关产品，最直接的影响也是产生范围最大的影响就是磁盘了，会直接导致存储出现单副本等问题，从而产生数据恢复，影响集群稳定性。
固件版本 Link to heading 数据中心级别磁盘，相比于性能的要求，稳定性才是重中之重。大部分厂商的磁盘均支持 S.M.A.R.T. 规范，也就是“Self-Monitoring Analysis and Reporting Technology”，即“自我监测、分析及报告技术”，是一种自动的硬盘状态检测与预警系统和规范。我们可以通过相应命令比如 smartctl 直接获取磁盘相应信息，或者对磁盘进行检测。
S.M.A.R.T. 存在两个问题：
大部分厂商支持，意味着一部分厂商不支持 不同厂商对于自家磁盘的关键字定义不同 针对上述两个问题，我们只能说做到尽量多的测试踩坑，防止出现意外情况。
介绍了 S.M.A.R.T. ，我们来看看这节标题，固件。磁盘固件版本可以通过 smartctl 或者 sg_utils 工具获取：
[root@node 07:47:14 ~]$smartctl -i /dev/sdc smartctl 6.5 2016-05-07 r4318 [x86_64-linux-3.10.0-693.11.6.el7.smartx.1.x86_64] (local build) Copyright (C) 2002-16, Bruce Allen, Christian Franke, www.smartmontools.org === START OF INFORMATION SECTION === Model Family: Intel 730 and DC S35x0/3610/3700 Series SSDs Device Model: INTEL SSDSC2BA400G4 Serial Number: BTHV518009D3400NGN LU WWN Device Id: 5 5cd2e4 04c00728c Firmware Version: G2010160 User Capacity: 400,088,457,216 bytes [400 GB] Sector Sizes: 512 bytes logical, 4096 bytes physical Rotation Rate: Solid State Device Form Factor: 2.</description></item></channel></rss>